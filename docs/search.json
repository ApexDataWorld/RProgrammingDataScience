[
  {
    "objectID": "Homework03/Placebo_BP_Treatment.html",
    "href": "Homework03/Placebo_BP_Treatment.html",
    "title": "Placebo_BP_Treatment",
    "section": "",
    "text": "Load the data file\n\n# Load the data file\nload(\"hw2_list.rda\")\n\n\n# Print data\nstr(bp_list)\n\nList of 2\n $ treatment:'data.frame':  20 obs. of  5 variables:\n  ..$ patient: chr [1:20] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:20] 120 151 125 126 115 132 132 129 134 139 ...\n  ..$ post_bp: num [1:20] 127 145 135 122 115 122 123 126 126 129 ...\n  ..$ diff_bp: num [1:20] -7 6 -10 4 0 10 9 3 8 10 ...\n  ..$ normal : logi [1:20] FALSE FALSE FALSE FALSE TRUE FALSE ...\n $ placebo  :'data.frame':  10 obs. of  5 variables:\n  ..$ patient: chr [1:10] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:10] 138 135 147 117 152 134 114 121 131 130\n  ..$ post_bp: num [1:10] 105 136 123 130 134 143 135 139 120 124\n  ..$ diff_bp: num [1:10] 33 -1 24 -13 18 -9 -21 -18 11 6\n  ..$ normal : logi [1:10] TRUE FALSE FALSE FALSE FALSE FALSE ...",
    "crumbs": [
      "Home",
      "Homework 3",
      "Placebo_BP_Treatment"
    ]
  },
  {
    "objectID": "Homework03/Placebo_BP_Treatment.html#setting-up-environment",
    "href": "Homework03/Placebo_BP_Treatment.html#setting-up-environment",
    "title": "Placebo_BP_Treatment",
    "section": "",
    "text": "Load the data file\n\n# Load the data file\nload(\"hw2_list.rda\")\n\n\n# Print data\nstr(bp_list)\n\nList of 2\n $ treatment:'data.frame':  20 obs. of  5 variables:\n  ..$ patient: chr [1:20] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:20] 120 151 125 126 115 132 132 129 134 139 ...\n  ..$ post_bp: num [1:20] 127 145 135 122 115 122 123 126 126 129 ...\n  ..$ diff_bp: num [1:20] -7 6 -10 4 0 10 9 3 8 10 ...\n  ..$ normal : logi [1:20] FALSE FALSE FALSE FALSE TRUE FALSE ...\n $ placebo  :'data.frame':  10 obs. of  5 variables:\n  ..$ patient: chr [1:10] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:10] 138 135 147 117 152 134 114 121 131 130\n  ..$ post_bp: num [1:10] 105 136 123 130 134 143 135 139 120 124\n  ..$ diff_bp: num [1:10] 33 -1 24 -13 18 -9 -21 -18 11 6\n  ..$ normal : logi [1:10] TRUE FALSE FALSE FALSE FALSE FALSE ...",
    "crumbs": [
      "Home",
      "Homework 3",
      "Placebo_BP_Treatment"
    ]
  },
  {
    "objectID": "Homework03/Placebo_BP_Treatment.html#task-1-control-flow-practice",
    "href": "Homework03/Placebo_BP_Treatment.html#task-1-control-flow-practice",
    "title": "Placebo_BP_Treatment",
    "section": "Task 1: Control Flow Practice",
    "text": "Task 1: Control Flow Practice\ncreate a new column in each data frame from above called status. \n\n#Find number of rows\nnrows_treatment &lt;- nrow(bp_list$treatment)\nprint(nrows_treatment)\n\n[1] 20\n\n\nInitialize the column with right length\n\n# Initialize the column with right length \nbp_list$treatment$status &lt;- character(nrows_treatment)\n\nFor the non-placebo data frame (within the list), create a for loop and use if/then/else logic to create the status column’s values.\n\n#Fill status with for/if/else using post_bp data\nfor (i in seq_len(nrows_treatment)) {\n  bp &lt;- bp_list$treatment$post_bp[i]\n  if (bp &lt;= 120) {\n    bp_list$treatment$status[i] &lt;- \"optimal\"\n  } else if (bp &lt;= 130) {\n    bp_list$treatment$status[i] &lt;- \"borderline\"\n  } else {\n    bp_list$treatment$status[i] &lt;- \"high\"\n  }\n}\n\nprint datato validate\n\n# More checks\nprint(table(bp_list$treatment$status, useNA = \"ifany\"))\n\n\nborderline       high    optimal \n         9          5          6 \n\n\n\n# Show first 20 rows \nprint(knitr::kable(head(bp_list$treatment, 20), \n                   caption = \"Treatment: first 20 rows with status\"))\n\n\n\nTable: Treatment: first 20 rows with status\n\n|           |patient    | pre_bp| post_bp| diff_bp|normal |status     |\n|:----------|:----------|------:|-------:|-------:|:------|:----------|\n|Subject_1  |Subject_1  |    120|     127|      -7|FALSE  |borderline |\n|Subject_2  |Subject_2  |    151|     145|       6|FALSE  |high       |\n|Subject_3  |Subject_3  |    125|     135|     -10|FALSE  |high       |\n|Subject_4  |Subject_4  |    126|     122|       4|FALSE  |borderline |\n|Subject_5  |Subject_5  |    115|     115|       0|TRUE   |optimal    |\n|Subject_6  |Subject_6  |    132|     122|      10|FALSE  |borderline |\n|Subject_7  |Subject_7  |    132|     123|       9|FALSE  |borderline |\n|Subject_8  |Subject_8  |    129|     126|       3|FALSE  |borderline |\n|Subject_9  |Subject_9  |    134|     126|       8|FALSE  |borderline |\n|Subject_10 |Subject_10 |    139|     129|      10|FALSE  |borderline |\n|Subject_11 |Subject_11 |    127|     132|      -5|FALSE  |high       |\n|Subject_12 |Subject_12 |    122|     146|     -24|FALSE  |high       |\n|Subject_13 |Subject_13 |    127|     120|       7|FALSE  |optimal    |\n|Subject_14 |Subject_14 |    135|     114|      21|TRUE   |optimal    |\n|Subject_15 |Subject_15 |    133|     121|      12|FALSE  |borderline |\n|Subject_16 |Subject_16 |    128|     120|       8|FALSE  |optimal    |\n|Subject_17 |Subject_17 |    147|     128|      19|FALSE  |borderline |\n|Subject_18 |Subject_18 |    138|     120|      18|FALSE  |optimal    |\n|Subject_19 |Subject_19 |    140|     133|       7|FALSE  |high       |\n|Subject_20 |Subject_20 |    132|     115|      17|TRUE   |optimal    |\n\n\ncreate a new column in each data frame from above called status – PLACEBO\n\n# Find number of rows\nnrows_placebo &lt;- nrow(bp_list$placebo)\nprint(nrows_placebo)\n\n[1] 10\n\n\nInitialize the column with right length\n\n# Initialize the column with right length \nbp_list$placebo$status &lt;- character(nrows_placebo)\n\nFor the placebo data frame (within the list), create a for loop and use if/then/else logic to create the status column’s values.\n\n#Fill status with for/if/else using post_bp data\nfor (i in seq_len(nrows_placebo)) {\n  bp &lt;- bp_list$placebo$post_bp[i]\n  if (bp &lt;= 120) {\n    bp_list$placebo$status[i] &lt;- \"optimal\"\n  } else if (bp &lt;= 130) {\n    bp_list$placebo$status[i] &lt;- \"borderline\"\n  } else {\n    bp_list$placebo$status[i] &lt;- \"high\"\n  }\n}\n\nPrint data to validate\n\n# More checks\nprint(table(bp_list$placebo$status, useNA = \"ifany\"))\n\n\nborderline       high    optimal \n         3          5          2 \n\n\n\n# Show first 10 rows \nprint(knitr::kable(head(bp_list$placebo, 10), \n                   caption = \"Placebo: first 10 rows with status\"))\n\n\n\nTable: Placebo: first 10 rows with status\n\n|patient    | pre_bp| post_bp| diff_bp|normal |status     |\n|:----------|------:|-------:|-------:|:------|:----------|\n|Subject_1  |    138|     105|      33|TRUE   |optimal    |\n|Subject_2  |    135|     136|      -1|FALSE  |high       |\n|Subject_3  |    147|     123|      24|FALSE  |borderline |\n|Subject_4  |    117|     130|     -13|FALSE  |borderline |\n|Subject_5  |    152|     134|      18|FALSE  |high       |\n|Subject_6  |    134|     143|      -9|FALSE  |high       |\n|Subject_7  |    114|     135|     -21|FALSE  |high       |\n|Subject_8  |    121|     139|     -18|FALSE  |high       |\n|Subject_9  |    131|     120|      11|FALSE  |optimal    |\n|Subject_10 |    130|     124|       6|FALSE  |borderline |",
    "crumbs": [
      "Home",
      "Homework 3",
      "Placebo_BP_Treatment"
    ]
  },
  {
    "objectID": "Homework03/Placebo_BP_Treatment.html#task-2-function-writing",
    "href": "Homework03/Placebo_BP_Treatment.html#task-2-function-writing",
    "title": "Placebo_BP_Treatment",
    "section": "Task 2: Function Writing",
    "text": "Task 2: Function Writing\nTask 2 (Function Writing) — Summary\nWrite a function that\nAccepts a list with TWO data frames - treatment and placebo\nAccepts a summary function name stat, resolved via my_fun &lt;- get(stat)\nComputes the statistic for pre_bp, post_bp, and diff_bp in both data frames\nReturns those six values as a named list with names\nPrint data using the default and with var, sd, min and max\n\n# Define function (bp_list and stat)\npatient_summary &lt;- function(bp_list, stat = \"mean\") {\n  \n  # Basic validation for list type and 2 elements\n  stopifnot(is.list(bp_list))\n  \n  if (length(bp_list) != 2) {\n    stop(\"The list should have exactly 2 data frames: treatment and placebo data.\")\n  }\n\n  # Add names and columns\n  required_df_names  &lt;- c(\"treatment\", \"placebo\")\n  required_col_names &lt;- c(\"pre_bp\", \"post_bp\", \"diff_bp\")\n\n  if (!all(required_df_names %in% names(bp_list))) {\n    stop(\"List must contain elements treatmnet and placebo\")\n  }\n  \n  for (i in required_df_names) {\n    if (!all(required_col_names %in% names(bp_list[[i]]))) {\n      stop(paste0(\"Missing required columns in '\", i, \"'. Required : \", \n                  paste(required_col_names, collapse = \", \")))\n    }\n  }\n\n  # check the statistic function\n  if (!exists(stat, mode = \"function\")) {\n    stop(paste0(\"'\", stat, \"' is not a valid function name.\"))\n  }\n  \n  stat_fun &lt;- get(stat, mode = \"function\")\n\n  # function to add stats\n apply_stat &lt;- function(x) {\n  if (\"na.rm\" %in% names(formals(stat_fun))) {\n    stat_fun(x, na.rm = TRUE)\n  } else {\n    stat_fun(x)\n  }\n}\n\n  # The order to execute flow as : treatment then placebo and then pre -&gt; post -&gt; diff\n  vals &lt;- c()\n  stat_names  &lt;- c()\n  for (df_name in required_df_names) {\n    for (col in required_col_names) {\n      vals &lt;- c(vals, apply_stat(bp_list[[df_name]][[col]]))\n      stat_names  &lt;- c(stat_names, paste0(stat, \"_\", df_name, \"_\", col))\n    }\n  }\n\n  # Name the values and return\n  \n  names(vals) &lt;- stat_names\n  \n  as.list(vals)\n}\n\nPrint all the computed statistics\n\n# Show the mean of all the values\nprint(patient_summary(bp_list)) \n\n$mean_treatment_pre_bp\n[1] 131.6\n\n$mean_treatment_post_bp\n[1] 125.95\n\n$mean_treatment_diff_bp\n[1] 5.65\n\n$mean_placebo_pre_bp\n[1] 131.9\n\n$mean_placebo_post_bp\n[1] 128.9\n\n$mean_placebo_diff_bp\n[1] 3\n\n# Show the variance of all the values\nprint(patient_summary(bp_list, \"var\"))\n\n$var_treatment_pre_bp\n[1] 75.72632\n\n$var_treatment_post_bp\n[1] 78.99737\n\n$var_treatment_diff_bp\n[1] 117.8184\n\n$var_placebo_pre_bp\n[1] 149.8778\n\n$var_placebo_post_bp\n[1] 124.9889\n\n$var_placebo_diff_bp\n[1] 341.3333\n\n# Show the sd of all the values\nprint(patient_summary(bp_list, \"sd\"))\n\n$sd_treatment_pre_bp\n[1] 8.702087\n\n$sd_treatment_post_bp\n[1] 8.888046\n\n$sd_treatment_diff_bp\n[1] 10.85442\n\n$sd_placebo_pre_bp\n[1] 12.24246\n\n$sd_placebo_post_bp\n[1] 11.17984\n\n$sd_placebo_diff_bp\n[1] 18.47521\n\n# Show the min of all the values\nprint(patient_summary(bp_list, \"min\"))\n\n$min_treatment_pre_bp\n[1] 115\n\n$min_treatment_post_bp\n[1] 114\n\n$min_treatment_diff_bp\n[1] -24\n\n$min_placebo_pre_bp\n[1] 114\n\n$min_placebo_post_bp\n[1] 105\n\n$min_placebo_diff_bp\n[1] -21\n\n# Show the max of all the values\nprint(patient_summary(bp_list, \"max\")) \n\n$max_treatment_pre_bp\n[1] 151\n\n$max_treatment_post_bp\n[1] 146\n\n$max_treatment_diff_bp\n[1] 21\n\n$max_placebo_pre_bp\n[1] 152\n\n$max_placebo_post_bp\n[1] 143\n\n$max_placebo_diff_bp\n[1] 33",
    "crumbs": [
      "Home",
      "Homework 3",
      "Placebo_BP_Treatment"
    ]
  },
  {
    "objectID": "Homework04/pages/concepts.html",
    "href": "Homework04/pages/concepts.html",
    "title": "Conceptual Questions",
    "section": "",
    "text": "Task 1: Conceptual Questions\n\n1. If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\nIf your working directory is: myfolder/homework/\nand the file is in: myfolder/MyData.csv\nthen we go up one directory (from homework/ back to myfolder/) and then specify the file name. ../MyData.csv\n\n\n\n2. What are the major benefits of using R projects?\nR is really good for data analysis and machine learning since it has a ton of packages that make cleaning and organizing messy data much easier. The biggest advantage of using R projects is reproducibility. If we set up work in an RStudio project, then we can share your code and others can run it right away without messing around with file paths. It also helps keep things organized because each project has its own working directory, history, and files.\n\n\n\n3. What is git and what is github?\nGit is a version control tool I use to track changes in my code. It keeps a full history so I can go back if I mess something up, and it lets me create branches to try new things without breaking the main project. It’s also great for working with other people since everyone can work on their own part and then merge it together.\nGitHub is basically the online home for Git projects. I can upload my repos there, share them with others, and work as a team. It has extra features like pull requests for reviewing code, issues for tracking bugs, and even project boards to stay organized.\nGit features: tracks changes, branching and merging, rollback, easy collaboration.\nGitHub features: online repo hosting, pull requests, CI/CD integration.\nOverall, Git is the tool that does the version control, and GitHub is the platform that makes it simple to store, share, and collaborate on projects.\n\n\n\n4. What are the two main differences between a tibble and a data.frame?\n1- A tibble is like an improved data.frame, and there are a few key differences.\n2- The big three are printing, subsetting, and recycling rules. Printing in tibbles is cleaner since it only shows the first 10 rows, while data.frames try to print everything.\nIf I grab one column from a tibble, it stays a tibble, but with a data.frame it just turns into a vector.\n3- For recycling, if I add a new column in a tibble, I have to give the full column, but a data.frame will recycle the values.\n4- There are a few other smaller differences like reading with read.csv() gives a data.frame but read_csv() from tidyverse gives a tibble.\n5- Tibbles don’t allow partial column name matching (data.frames do)\nAnd tibbles keep variable types as it is while data.frames sometimes turn strings into factors.\n\n\n\n5. Rewrite the following nested function call using BaseR’s chaining operator\n\n\n\nas_tibble(iris) |&gt; select(starts_with(“Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)",
    "crumbs": [
      "Home",
      "Homework 4",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "Homework04/index.html",
    "href": "Homework04/index.html",
    "title": "Index",
    "section": "",
    "text": "Quick links to the parts:\n\nConcepts\nReading Delimited Data\nCombining Excel & Delimited Data",
    "crumbs": [
      "Home",
      "Homework 4"
    ]
  },
  {
    "objectID": "Homework04/pages/combining.html",
    "href": "Homework04/pages/combining.html",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "Task 3 Combining Data\n\nLoad the libraries\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\n\n\n\nSet the path\n\n# Set paths \npath_white_wine &lt;- \"white-wine.xlsx\" \nurl_white_wine  &lt;- \"https://www4.stat.ncsu.edu/~online/datasets/white-wine.xlsx\"\n\n\nif (!file.exists(path_white_wine)) {\n  download.file(url_white_wine, destfile = path_white_wine, mode = \"wb\")\n}\n\n\n\nImport white wine (Excel, sheet 1) and print tibble\n\n# Read data from the first sheet\nwhite_wine &lt;- readxl::read_excel(path_white_wine, sheet = 1)\n\nwhite_wine\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\n\nRead alternative names from sheet 2 and overwrite column names\n\n# Read data from second sheet\nalternate_names_df &lt;- readxl::read_excel(path_white_wine, sheet = 2)\n\n# Get the first column as a character vector of names\nalternate_names &lt;- alternate_names_df[[1]] %&gt;% as.character()\n\n# Overwrite the column names of the white wine\ncolnames(white_wine) &lt;- alternate_names\n\nwhite_wine\n\n# A tibble: 4,898 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\n\nAdd a column indicating wine type = “white”\n\nwhite_wine &lt;- white_wine %&gt;%\n  mutate(type = \"white\")\n\nwhite_wine\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\nRead red wine (semicolon-delimited CSV), replace variable names, add type = \"red\"\n\n# Read the semicolon delimited file from the URL\nred_wine &lt;- readr::read_delim(\n  \"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\",\n  delim = \";\",\n  show_col_types = FALSE,\n  trim_ws = TRUE\n)\n\n# Use the same alternative names as before \ncolnames(red_wine) &lt;- alternate_names\n\n# Add type column\nred_wine &lt;- red_wine %&gt;%\n  mutate(type = \"red\")\n\n\n\nCheck data\n\nred_wine\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.4             0.7         0               1.9     0.076\n 2           7.8             0.88        0               2.6     0.098\n 3           7.8             0.76        0.04            2.3     0.092\n 4          11.2             0.28        0.56            1.9     0.075\n 5           7.4             0.7         0               1.9     0.076\n 6           7.4             0.66        0               1.8     0.075\n 7           7.9             0.6         0.06            1.6     0.069\n 8           7.3             0.65        0               1.2     0.065\n 9           7.8             0.58        0.02            2       0.073\n10           7.5             0.5         0.36            6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\nCombine white + red using dplyr::bind_rows()\n\nwine_all_data &lt;- dplyr::bind_rows(white_wine, red_wine)\n\nwine_all_data\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\nFilter: high-quality wines (quality &gt; 6.5) and reasonable alcohol (alcohol &lt; 132)\n\nwine_filtered &lt;- wine_all_data %&gt;%\n  filter(quality &gt; 6.5, alcohol &lt; 132)\n\nwine_filtered\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            66             0.16        0.4             1.5     0.044\n 2            66             0.17        0.38            1.5     0.032\n 3            62             0.66        0.48            1.2     0.029\n 4            62             0.66        0.48            1.2     0.029\n 5            64             0.31        0.38            2.9     0.038\n 6            68             0.26        0.42            1.7     0.049\n 7            72             0.32        0.36            2       0.033\n 8            74             0.18        0.31            1.4     0.058\n 9            66             0.25        0.29            1.1     0.068\n10            62             0.16        0.33            1.1     0.057\n# ℹ 1,196 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\nSort from highest quality to lowest\n\nwine_sorted &lt;- wine_filtered %&gt;%\n  arrange(desc(quality))\n\nwine_sorted\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            91             0.27        0.45           10.6     0.035\n 2            66             0.36        0.29            1.6     0.021\n 3            74             0.24        0.36            2       0.031\n 4            69             0.36        0.34            4.2     0.018\n 5            71             0.26        0.49            2.2     0.032\n 6            62             0.66        0.48            1.2     0.029\n 7            62             0.66        0.48            1.2     0.029\n 8            68             0.26        0.42            1.7     0.049\n 9            67             0.23        0.31            2.1     0.046\n10            67             0.23        0.31            2.1     0.046\n# ℹ 1,196 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\nKeep only variables containing “acid”, plus alcohol, type, and quality\n\nwine_selected &lt;- wine_sorted %&gt;%\n  select(contains(\"acid\"), alcohol, type, quality)\n\nwine_selected\n\n# A tibble: 1,206 × 6\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9\n 2            66             0.36        0.29     124 white       9\n 3            74             0.24        0.36     125 white       9\n 4            69             0.36        0.34     127 white       9\n 5            71             0.26        0.49     129 white       9\n 6            62             0.66        0.48     128 white       8\n 7            62             0.66        0.48     128 white       8\n 8            68             0.26        0.42     105 white       8\n 9            67             0.23        0.31     107 white       8\n10            67             0.23        0.31     107 white       8\n# ℹ 1,196 more rows\n\n\n\n\nAdd mean and sd of alcohol for each level of quality\n\nwine_final_df &lt;- wine_selected %&gt;%\n  group_by(quality) %&gt;%\n  mutate(\n    mean_alcohol = mean(alcohol, na.rm = TRUE),\n    sd_alcohol   = sd(alcohol, na.rm = TRUE)\n  ) %&gt;%\n  ungroup()\n\n\nknitr::kable(head(wine_final_df, 20))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfixed_acidity\nvolatile_acidity\ncitric_acid\nalcohol\ntype\nquality\nmean_alcohol\nsd_alcohol\n\n\n\n\n91\n0.27\n0.45\n104\nwhite\n9\n121.8000\n10.13410\n\n\n66\n0.36\n0.29\n124\nwhite\n9\n121.8000\n10.13410\n\n\n74\n0.24\n0.36\n125\nwhite\n9\n121.8000\n10.13410\n\n\n69\n0.36\n0.34\n127\nwhite\n9\n121.8000\n10.13410\n\n\n71\n0.26\n0.49\n129\nwhite\n9\n121.8000\n10.13410\n\n\n62\n0.66\n0.48\n128\nwhite\n8\n94.1288\n42.81092\n\n\n62\n0.66\n0.48\n128\nwhite\n8\n94.1288\n42.81092\n\n\n68\n0.26\n0.42\n105\nwhite\n8\n94.1288\n42.81092\n\n\n67\n0.23\n0.31\n107\nwhite\n8\n94.1288\n42.81092\n\n\n67\n0.23\n0.31\n107\nwhite\n8\n94.1288\n42.81092\n\n\n52\n0.44\n0.04\n121\nwhite\n8\n94.1288\n42.81092\n\n\n52\n0.44\n0.04\n121\nwhite\n8\n94.1288\n42.81092\n\n\n68\n0.53\n0.35\n127\nwhite\n8\n94.1288\n42.81092\n\n\n67\n0.26\n0.39\n96\nwhite\n8\n94.1288\n42.81092\n\n\n7\n0.24\n0.36\n126\nwhite\n8\n94.1288\n42.81092\n\n\n61\n0.31\n0.58\n123\nwhite\n8\n94.1288\n42.81092\n\n\n5\n0.55\n0.14\n125\nwhite\n8\n94.1288\n42.81092\n\n\n64\n0.32\n0.35\n125\nwhite\n8\n94.1288\n42.81092\n\n\n7\n0.23\n0.36\n121\nwhite\n8\n94.1288\n42.81092\n\n\n66\n0.16\n0.32\n124\nwhite\n8\n94.1288\n42.81092",
    "crumbs": [
      "Home",
      "Homework 4",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "Homework04/pages/read_delimited.html",
    "href": "Homework04/pages/read_delimited.html",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nglass_colnames &lt;- c(\n  \"Id\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\"Fe\",\"Type\"\n)\n\n\n\n\n\nglass &lt;- readr::read_csv(\n  \"https://www4.stat.ncsu.edu/~online/datasets/glass.data\",\n  col_names = glass_colnames,\n  show_col_types = FALSE\n)\n\nglass\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe  Type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0        1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0        1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0        1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0        1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0        1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26     1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0        1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0        1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0        1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11     1\n# ℹ 204 more rows\n\n\n\n\n\n\nglass_labeled &lt;- glass %&gt;%\n  mutate(\n    Type_of_glass = case_when(\n      Type == 1 ~ \"building_windows_float_processed\",\n      Type == 2 ~ \"building_windows_non_float_processed\",\n      Type == 3 ~ \"vehicle_windows_float_processed\",\n      Type == 4 ~ \"vehicle_windows_non_float_processed\",  # none in this db\n      Type == 5 ~ \"containers\",\n      Type == 6 ~ \"tableware\",\n      Type == 7 ~ \"headlamps\",\n      TRUE ~ NA_character_\n    )\n  )\n\nglass_labeled\n\n# A tibble: 214 × 12\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe  Type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0        1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0        1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0        1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0        1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0        1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26     1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0        1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0        1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0        1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11     1\n# ℹ 204 more rows\n# ℹ 1 more variable: Type_of_glass &lt;chr&gt;\n\n\n\n\n\n\nglass_filtered &lt;- glass_labeled %&gt;%\n  filter(\n    Fe &lt; 0.2,\n    Type_of_glass %in% c(\"tableware\", \"headlamps\")\n  )\n\nglass_filtered\n\n# A tibble: 38 × 12\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe  Type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0     6\n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0     6\n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0     6\n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0     6\n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0     6\n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0     6\n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0     6\n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0     6\n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0     6\n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0     7\n# ℹ 28 more rows\n# ℹ 1 more variable: Type_of_glass &lt;chr&gt;\n\n\n\n\n\n\nyeast_colnames &lt;- c(\n  \"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\"\n)\n\n\n\n\nyeast &lt;- readr::read_table(\n  \"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\",\n  col_names = yeast_colnames\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\nyeast\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n\n\n\n\nyeast_filter &lt;- yeast %&gt;%\n  select(-seq_name, -nuc)\n\nyeast_filter\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm   mit   erl   pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT  \n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT  \n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT  \n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC  \n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT  \n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT  \n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT  \n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC  \n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT  \n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT  \n# ℹ 1,474 more rows\n\n\n\n\n\n\nyeast_filer_data &lt;- yeast |&gt;\n  select(-c(seq_name, nuc)) |&gt;                    \n  group_by(class) |&gt;                              \n  mutate(\n    across(\n      .cols = c(mcg, gvh, alm, mit, erl, pox, vac), \n      .fns  = list(mean = ~ mean(.x, na.rm = TRUE),\n                   median = ~ median(.x, na.rm = TRUE)),\n      .names = \"{.col}_{.fn}\"\n    )\n  ) |&gt;\n  ungroup()\n\n\n\n\n\nknitr::kable(head(yeast_filer_data, 20))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmcg\ngvh\nalm\nmit\nerl\npox\nvac\nclass\nmcg_mean\nmcg_median\ngvh_mean\ngvh_median\nalm_mean\nalm_median\nmit_mean\nmit_median\nerl_mean\nerl_median\npox_mean\npox_median\nvac_mean\nvac_median\n\n\n\n\n0.58\n0.61\n0.47\n0.13\n0.5\n0.0\n0.48\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.43\n0.67\n0.48\n0.27\n0.5\n0.0\n0.53\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.64\n0.62\n0.49\n0.15\n0.5\n0.0\n0.53\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.58\n0.44\n0.57\n0.13\n0.5\n0.0\n0.54\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.42\n0.44\n0.48\n0.54\n0.5\n0.0\n0.48\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.51\n0.40\n0.56\n0.17\n0.5\n0.5\n0.49\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.50\n0.54\n0.48\n0.65\n0.5\n0.0\n0.53\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.48\n0.45\n0.59\n0.20\n0.5\n0.0\n0.58\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.55\n0.50\n0.66\n0.36\n0.5\n0.0\n0.49\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.40\n0.39\n0.60\n0.15\n0.5\n0.0\n0.58\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.43\n0.39\n0.54\n0.21\n0.5\n0.0\n0.53\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.42\n0.37\n0.59\n0.20\n0.5\n0.0\n0.52\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.40\n0.42\n0.57\n0.35\n0.5\n0.0\n0.53\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.60\n0.40\n0.52\n0.46\n0.5\n0.0\n0.53\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.66\n0.55\n0.45\n0.19\n0.5\n0.0\n0.46\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.46\n0.44\n0.52\n0.11\n0.5\n0.0\n0.50\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.47\n0.39\n0.50\n0.11\n0.5\n0.0\n0.49\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.58\n0.47\n0.54\n0.11\n0.5\n0.0\n0.51\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.50\n0.34\n0.55\n0.21\n0.5\n0.0\n0.49\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.61\n0.60\n0.55\n0.21\n0.5\n0.0\n0.50\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50",
    "crumbs": [
      "Home",
      "Homework 4",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "Homework02/BaseR_Programming.html#task-1-basic-vector-practice",
    "href": "Homework02/BaseR_Programming.html#task-1-basic-vector-practice",
    "title": "BaseR_Programming",
    "section": "Task 1: Basic Vector Practice",
    "text": "Task 1: Basic Vector Practice\nCreate two vectors for pre and post treatment blood pressure values\n\n# Create two vectors\npre_measurements &lt;- c(120, 151, 125, 126, 115, 132, 132, 129, 134, 139,\n127, 122, 127, 135, 133, 128, 147, 138, 140, 132)\n\npost_measurements &lt;- c(127, 145, 135, 122, 115, 122, 123, 126, 126, 129,\n132, 146, 120, 114, 121, 120, 128, 120, 133, 115)\n\n# Assign names to the vector elements using the paste() function\nsubject_names &lt;- paste(\"Subject\", 1:20, sep = \"_\")\nnames(pre_measurements) &lt;- subject_names\nnames(post_measurements) &lt;- subject_names\n\npre_measurements\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n       120        151        125        126        115        132        132 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n       129        134        139        127        122        127        135 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n       133        128        147        138        140        132 \n\npost_measurements\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n       127        145        135        122        115        122        123 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n       126        126        129        132        146        120        114 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n       121        120        128        120        133        115 \n\n\nCalculate the change in blood pressure for each patient\n\n# subtracting post-treatment measurements from pre-treatment measurements\nchange_in_blood_pressure &lt;- pre_measurements - post_measurements\n\n# Print first few values\n#head(change_in_blood_pressure)\nprint(change_in_blood_pressure)\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        -7          6        -10          4          0         10          9 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n         3          8         10         -5        -24          7         21 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n        12          8         19         18          7         17 \n\n\nCalculate the average decrease in blood pressure across all patients.\n\n# Use the mean() function here!\naverage_bp_all_patients &lt;- mean(change_in_blood_pressure)\naverage_bp_all_patients\n\n[1] 5.65\n\n\nDetermine which patients experienced a decrease in blood pressure after treatment\n\n# Use the which() function to just return the indices\ndecreased_bp_after_treatment &lt;- which(change_in_blood_pressure &gt; 0)\nprint(decreased_bp_after_treatment)\n\n Subject_2  Subject_4  Subject_6  Subject_7  Subject_8  Subject_9 Subject_10 \n         2          4          6          7          8          9         10 \nSubject_13 Subject_14 Subject_15 Subject_16 Subject_17 Subject_18 Subject_19 \n        13         14         15         16         17         18         19 \nSubject_20 \n        20 \n\nprint(\"Ptient names with decreased blood pressure are:\"  )\n\n[1] \"Ptient names with decreased blood pressure are:\"\n\nnames(change_in_blood_pressure)[decreased_bp_after_treatment]\n\n [1] \"Subject_2\"  \"Subject_4\"  \"Subject_6\"  \"Subject_7\"  \"Subject_8\" \n [6] \"Subject_9\"  \"Subject_10\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[11] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\nprint(\"Total patients with decreased blood pressure are:\"  )\n\n[1] \"Total patients with decreased blood pressure are:\"\n\nlength(decreased_bp_after_treatment)\n\n[1] 15\n\n\nSubset the vector of differences to only return those that have a positive change.\n\n# Only positive changes\npositive_changes &lt;- change_in_blood_pressure[change_in_blood_pressure &gt; 0]\npositive_changes\n\n Subject_2  Subject_4  Subject_6  Subject_7  Subject_8  Subject_9 Subject_10 \n         6          4         10          9          3          8         10 \nSubject_13 Subject_14 Subject_15 Subject_16 Subject_17 Subject_18 Subject_19 \n         7         21         12          8         19         18          7 \nSubject_20 \n        17 \n\n\nCalculate the average decrease in blood pressure\n\n# for those where the blood pressure decreased\nmean_decreased_bp_positive_only &lt;- mean(positive_changes)\nprint(\"Average decrease in blood pressure -\")\n\n[1] \"Average decrease in blood pressure -\"\n\nmean_decreased_bp_positive_only\n\n[1] 10.6",
    "crumbs": [
      "Home",
      "Homework 2",
      "BaseR_Programming"
    ]
  },
  {
    "objectID": "Homework04/pages/read_delimited.html#yeast-data",
    "href": "Homework04/pages/read_delimited.html#yeast-data",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "yeast_colnames &lt;- c(\n  \"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\"\n)\n\n\n\n\nyeast &lt;- readr::read_table(\n  \"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\",\n  col_names = yeast_colnames\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\nyeast\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n\n\n\n\nyeast_filter &lt;- yeast %&gt;%\n  select(-seq_name, -nuc)\n\nyeast_filter\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm   mit   erl   pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT  \n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT  \n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT  \n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC  \n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT  \n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT  \n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT  \n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC  \n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT  \n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT  \n# ℹ 1,474 more rows\n\n\n\n\n\n\nyeast_filer_data &lt;- yeast |&gt;\n  select(-c(seq_name, nuc)) |&gt;                    \n  group_by(class) |&gt;                              \n  mutate(\n    across(\n      .cols = c(mcg, gvh, alm, mit, erl, pox, vac), \n      .fns  = list(mean = ~ mean(.x, na.rm = TRUE),\n                   median = ~ median(.x, na.rm = TRUE)),\n      .names = \"{.col}_{.fn}\"\n    )\n  ) |&gt;\n  ungroup()\n\n\n\n\n\nknitr::kable(head(yeast_filer_data, 20))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmcg\ngvh\nalm\nmit\nerl\npox\nvac\nclass\nmcg_mean\nmcg_median\ngvh_mean\ngvh_median\nalm_mean\nalm_median\nmit_mean\nmit_median\nerl_mean\nerl_median\npox_mean\npox_median\nvac_mean\nvac_median\n\n\n\n\n0.58\n0.61\n0.47\n0.13\n0.5\n0.0\n0.48\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.43\n0.67\n0.48\n0.27\n0.5\n0.0\n0.53\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.64\n0.62\n0.49\n0.15\n0.5\n0.0\n0.53\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.58\n0.44\n0.57\n0.13\n0.5\n0.0\n0.54\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.42\n0.44\n0.48\n0.54\n0.5\n0.0\n0.48\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.51\n0.40\n0.56\n0.17\n0.5\n0.5\n0.49\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.50\n0.54\n0.48\n0.65\n0.5\n0.0\n0.53\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.48\n0.45\n0.59\n0.20\n0.5\n0.0\n0.58\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.55\n0.50\n0.66\n0.36\n0.5\n0.0\n0.49\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.40\n0.39\n0.60\n0.15\n0.5\n0.0\n0.58\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.43\n0.39\n0.54\n0.21\n0.5\n0.0\n0.53\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.42\n0.37\n0.59\n0.20\n0.5\n0.0\n0.52\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.40\n0.42\n0.57\n0.35\n0.5\n0.0\n0.53\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.60\n0.40\n0.52\n0.46\n0.5\n0.0\n0.53\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.66\n0.55\n0.45\n0.19\n0.5\n0.0\n0.46\nMIT\n0.5214344\n0.51\n0.5332377\n0.53\n0.5173770\n0.52\n0.4044262\n0.41\n0.5000000\n0.5\n0.0088525\n0\n0.5016803\n0.50\n\n\n0.46\n0.44\n0.52\n0.11\n0.5\n0.0\n0.50\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.47\n0.39\n0.50\n0.11\n0.5\n0.0\n0.49\nCYT\n0.4807127\n0.48\n0.4695032\n0.46\n0.5354212\n0.53\n0.2271058\n0.19\n0.5043197\n0.5\n0.0010799\n0\n0.4993952\n0.51\n\n\n0.58\n0.47\n0.54\n0.11\n0.5\n0.0\n0.51\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.50\n0.34\n0.55\n0.21\n0.5\n0.0\n0.49\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50\n\n\n0.61\n0.60\n0.55\n0.21\n0.5\n0.0\n0.50\nNUC\n0.4524476\n0.45\n0.4561305\n0.46\n0.5293240\n0.53\n0.2283450\n0.20\n0.5034965\n0.5\n0.0000000\n0\n0.4941026\n0.50",
    "crumbs": [
      "Home",
      "Homework 4",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "Homework05/pages/read_merge.html",
    "href": "Homework05/pages/read_merge.html",
    "title": "read_merge",
    "section": "",
    "text": "Load libraries\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readr)\nlibrary(ggplot2)\n\nRead the math dataset from local CSV file\nRead the Portuguese dataset from local CSV file\n\nmath_data &lt;- read_delim(\"../student/student-mat.csv\", delim = \";\", show_col_types = FALSE)\npor_data  &lt;- read_delim(\"../student/student-por.csv\", delim = \";\", show_col_types = FALSE)\n\nExclude grade and absence columns before joining\nGet list of common columns to join on\n\nexclude   &lt;- c(\"G1\",\"G2\",\"G3\",\"paid\",\"absences\")\njoin_keys &lt;- setdiff(names(math_data), exclude)\n\nCombine both datasets using inner join on common columns\n\ncombine_data &lt;- inner_join(math_data, por_data,\n                           by = join_keys,\n                           relationship = \"many-to-many\")\n\nShow first few rows of the combined dataset\n\nhead(combine_data)\n\n# A tibble: 6 × 38\n  school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob    reason\n  &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt; \n1 GP     F        18 U       GT3     A           4     4 at_home  teacher course\n2 GP     F        17 U       GT3     T           1     1 at_home  other   course\n3 GP     F        15 U       GT3     T           4     2 health   servic… home  \n4 GP     F        16 U       GT3     T           3     3 other    other   home  \n5 GP     M        16 U       LE3     T           4     3 services other   reput…\n6 GP     M        16 U       LE3     T           2     2 other    other   home  \n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;, G2.x &lt;dbl&gt;,\n#   G3.x &lt;dbl&gt;, paid.y &lt;chr&gt;, absences.y &lt;dbl&gt;, G1.y &lt;dbl&gt;, G2.y &lt;dbl&gt;,\n#   G3.y &lt;dbl&gt;\n\nprint(paste(\"Rows in combined dataset:\", nrow(combine_data)))\n\n[1] \"Rows in combined dataset: 320\"",
    "crumbs": [
      "Home",
      "Homework 5",
      "read_merge"
    ]
  },
  {
    "objectID": "Homework05/pages/read_merge.html#quarto",
    "href": "Homework05/pages/read_merge.html#quarto",
    "title": "read_merge",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.",
    "crumbs": [
      "Home",
      "Homework 5",
      "read_merge"
    ]
  },
  {
    "objectID": "Homework05/pages/read_merge.html#running-code",
    "href": "Homework05/pages/read_merge.html#running-code",
    "title": "read_merge",
    "section": "",
    "text": "Load libraries\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readr)\nlibrary(ggplot2)\n\nRead the math dataset from local CSV file\nRead the Portuguese dataset from local CSV file\n\nmath_data &lt;- read_delim(\"../student/student-mat.csv\", delim = \";\", show_col_types = FALSE)\npor_data  &lt;- read_delim(\"../student/student-por.csv\", delim = \";\", show_col_types = FALSE)\n\nExclude grade and absence columns before joining\nGet list of common columns to join on\n\nexclude   &lt;- c(\"G1\",\"G2\",\"G3\",\"paid\",\"absences\")\njoin_keys &lt;- setdiff(names(math_data), exclude)\n\nCombine both datasets using inner join on common columns\n\ncombine_data &lt;- inner_join(math_data, por_data,\n                           by = join_keys,\n                           relationship = \"many-to-many\")\n\nShow first few rows of the combined dataset\n\nhead(combine_data)\n\n# A tibble: 6 × 38\n  school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob    reason\n  &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt; \n1 GP     F        18 U       GT3     A           4     4 at_home  teacher course\n2 GP     F        17 U       GT3     T           1     1 at_home  other   course\n3 GP     F        15 U       GT3     T           4     2 health   servic… home  \n4 GP     F        16 U       GT3     T           3     3 other    other   home  \n5 GP     M        16 U       LE3     T           4     3 services other   reput…\n6 GP     M        16 U       LE3     T           2     2 other    other   home  \n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;, G2.x &lt;dbl&gt;,\n#   G3.x &lt;dbl&gt;, paid.y &lt;chr&gt;, absences.y &lt;dbl&gt;, G1.y &lt;dbl&gt;, G2.y &lt;dbl&gt;,\n#   G3.y &lt;dbl&gt;\n\nprint(paste(\"Rows in combined dataset:\", nrow(combine_data)))\n\n[1] \"Rows in combined dataset: 320\"",
    "crumbs": [
      "Home",
      "Homework 5",
      "read_merge"
    ]
  },
  {
    "objectID": "Homework05/pages/summary.html",
    "href": "Homework05/pages/summary.html",
    "title": "summary",
    "section": "",
    "text": "Load tidyverse and Read in the combined dataset saved earlier\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncombine_data &lt;- read_rds(\"../student/combined_data.rds\")\n\nCalculate mean, median, standard deviation, and IQR for key numeric variables. Reshape summary statistics into long format for easier viewing.\n\n# Measure of center\nmeas_of_center &lt;- combine_data |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\nmeas_of_center_long &lt;- meas_of_center |&gt;\n  pivot_longer(cols = everything(),\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\n\n# View the result in long format\nhead(meas_of_center_long)\n\n# A tibble: 6 × 3\n  Feature    Statistic value\n  &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 age        Mean      16.5 \n2 age        Median    16   \n3 age        Std        1.14\n4 age        IQR        1   \n5 absences.x Mean       5.41\n6 absences.x Median     4   \n\nmeas_of_center_long\n\n# A tibble: 20 × 3\n   Feature    Statistic value\n   &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n 1 age        Mean      16.5 \n 2 age        Median    16   \n 3 age        Std        1.14\n 4 age        IQR        1   \n 5 absences.x Mean       5.41\n 6 absences.x Median     4   \n 7 absences.x Std        7.84\n 8 absences.x IQR        7.25\n 9 absences.y Mean       3.25\n10 absences.y Median     2   \n11 absences.y Std        4.56\n12 absences.y IQR        4   \n13 G3.x       Mean      11.0 \n14 G3.x       Median    11   \n15 G3.x       Std        4.30\n16 G3.x       IQR        5   \n17 G3.y       Mean      12.9 \n18 G3.y       Median    13   \n19 G3.y       Std        2.89\n20 G3.y       IQR        4   \n\n\nCalculate summary statistics only for Male students and convert male subset summary to long format\n\nsubset_sex_statistics &lt;- combine_data |&gt;\n  filter(sex==\"Male\") |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\nsubset_meas_of_center_long &lt;- subset_sex_statistics |&gt;\n  pivot_longer(cols = everything(),\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\n#View(subset_meas_of_center_long)\nhead(subset_meas_of_center_long)\n\n# A tibble: 6 × 3\n  Feature    Statistic value\n  &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 age        Mean      16.4 \n2 age        Median    16   \n3 age        Std        1.22\n4 age        IQR        2   \n5 absences.x Mean       4.97\n6 absences.x Median     4   \n\n\nCalculate summary statistics only for Gabriel Pereira school. Convert Gabriel Pereira subset summary to long format.\n\nsubset_school_statistics &lt;- combine_data |&gt;\n  filter(school==\"Gabriel Pereira\") |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\nsubset_school_meas_of_center_long &lt;- subset_school_statistics |&gt;\n  pivot_longer(cols = everything(),\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\nhead(subset_school_meas_of_center_long)\n\n# A tibble: 6 × 3\n  Feature    Statistic value\n  &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 age        Mean      16.4 \n2 age        Median    16   \n3 age        Std        1.10\n4 age        IQR        1   \n5 absences.x Mean       5.64\n6 absences.x Median     4   \n\n\nGroup by school and summarize numeric variables\n\nsubset_school_statistics &lt;- combine_data |&gt;\n  group_by(school) |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\nsubset_school_meas_of_center_long &lt;- subset_school_statistics |&gt;\n  pivot_longer(cols = -school,\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\nhead(subset_school_meas_of_center_long)\n\n# A tibble: 6 × 4\n  school          Feature    Statistic value\n  &lt;fct&gt;           &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 Gabriel Pereira age        Mean      16.4 \n2 Gabriel Pereira age        Median    16   \n3 Gabriel Pereira age        Std        1.10\n4 Gabriel Pereira age        IQR        1   \n5 Gabriel Pereira absences.x Mean       5.64\n6 Gabriel Pereira absences.x Median     4   \n\n\nGroup by both school and sex and summarize numeric variables. Convert school and sex grouped summary to long format.\n\nschool_sex_statistics &lt;- combine_data |&gt;\n  group_by(school, sex) |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\nschool_sex_meas_of_center_long &lt;- school_sex_statistics |&gt;\n  pivot_longer(cols = -c(\"school\",\"sex\"),\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\nhead(school_sex_meas_of_center_long)\n\n# A tibble: 6 × 5\n# Groups:   school [1]\n  school          sex    Feature    Statistic value\n  &lt;fct&gt;           &lt;fct&gt;  &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 Gabriel Pereira Female age        Mean      16.5 \n2 Gabriel Pereira Female age        Median    16   \n3 Gabriel Pereira Female age        Std        1.03\n4 Gabriel Pereira Female age        IQR        1   \n5 Gabriel Pereira Female absences.x Mean       6.12\n6 Gabriel Pereira Female absences.x Median     4   \n\n\nSelect only numeric columns to create a correlation matrix\n\ncorr_mat &lt;- combine_data |&gt;\n  select(where(is.numeric))\n\ncor(corr_mat)\n\n                    age         Medu         Fedu   traveltime    studytime\nage         1.000000000 -0.100949786 -0.107245313  0.160281754  0.043881028\nMedu       -0.100949786  1.000000000  0.621523869 -0.218794954  0.045425978\nFedu       -0.107245313  0.621523869  1.000000000 -0.193978042 -0.039289626\ntraveltime  0.160281754 -0.218794954 -0.193978042  1.000000000 -0.103243249\nstudytime   0.043881028  0.045425978 -0.039289626 -0.103243249  1.000000000\nfailures    0.243429617 -0.125608045 -0.157496645  0.104521138 -0.179515785\nfamrel      0.049940980 -0.067657746 -0.047260992 -0.027275744  0.001381660\nfreetime   -0.045824466  0.004013326 -0.001258667 -0.055899592 -0.091829632\ngoout       0.150794790  0.065832096  0.050593936  0.006559725 -0.009403345\nDalc        0.113952023  0.062866542  0.039126588  0.161272613 -0.172278644\nWalc        0.156817685 -0.004099434  0.023315814  0.105381347 -0.232402574\nhealth     -0.113225976 -0.011497172  0.067152933  0.020869407 -0.040979063\nabsences.x  0.143925170  0.099832689  0.024617771 -0.001464243 -0.082387919\nG1.x       -0.110379348  0.193071603  0.175557917 -0.088080745  0.125691378\nG2.x       -0.186187399  0.188735230  0.150418214 -0.184594967  0.089030600\nG3.x       -0.206031862  0.187754424  0.141990610 -0.165110961  0.045402243\nabsences.y  0.047331821  0.063530536  0.086614161  0.054308059 -0.134969383\nG1.y       -0.050549678  0.181423706  0.115531025 -0.178191662  0.229739293\nG2.y        0.029366456  0.189642017  0.136994424 -0.179611557  0.231059730\nG3.y       -0.009103257  0.158979933  0.107807478 -0.153616466  0.238553746\n              failures      famrel     freetime        goout        Dalc\nage         0.24342962  0.04994098 -0.045824466  0.150794790  0.11395202\nMedu       -0.12560804 -0.06765775  0.004013326  0.065832096  0.06286654\nFedu       -0.15749664 -0.04726099 -0.001258667  0.050593936  0.03912659\ntraveltime  0.10452114 -0.02727574 -0.055899592  0.006559725  0.16127261\nstudytime  -0.17951579  0.00138166 -0.091829632 -0.009403345 -0.17227864\nfailures    1.00000000  0.09437401  0.089757964  0.097119445  0.16213974\nfamrel      0.09437401  1.00000000  0.090946059  0.033058834 -0.05737989\nfreetime    0.08975796  0.09094606  1.000000000  0.243271162  0.20497133\ngoout       0.09711944  0.03305883  0.243271162  1.000000000  0.25703214\nDalc        0.16213974 -0.05737989  0.204971335  0.257032140  1.00000000\nWalc        0.16736348 -0.12634267  0.119021094  0.378591514  0.64989386\nhealth      0.04225577  0.13959656  0.070864701 -0.049000564  0.05996329\nabsences.x  0.12006863 -0.04806901 -0.046300383  0.078848996  0.15159884\nG1.x       -0.19581035 -0.05618075 -0.017100766 -0.115882796 -0.09641793\nG2.x       -0.16669179 -0.08710139 -0.029677027 -0.158978350 -0.05916707\nG3.x       -0.14303203 -0.01797570 -0.006516202 -0.118423233 -0.04696434\nabsences.y  0.13424264 -0.02955203 -0.011429255  0.128521823  0.10753855\nG1.y       -0.26927657 -0.06419546 -0.085629896 -0.071905764 -0.23398211\nG2.y       -0.26992597 -0.02441686 -0.087231866 -0.091151551 -0.25300707\nG3.y       -0.32775690 -0.01282948 -0.110638817 -0.073423265 -0.27992305\n                   Walc       health   absences.x        G1.x        G2.x\nage         0.156817685 -0.113225976  0.143925170 -0.11037935 -0.18618740\nMedu       -0.004099434 -0.011497172  0.099832689  0.19307160  0.18873523\nFedu        0.023315814  0.067152933  0.024617771  0.17555792  0.15041821\ntraveltime  0.105381347  0.020869407 -0.001464243 -0.08808075 -0.18459497\nstudytime  -0.232402574 -0.040979063 -0.082387919  0.12569138  0.08903060\nfailures    0.167363479  0.042255769  0.120068630 -0.19581035 -0.16669179\nfamrel     -0.126342672  0.139596565 -0.048069014 -0.05618075 -0.08710139\nfreetime    0.119021094  0.070864701 -0.046300383 -0.01710077 -0.02967703\ngoout       0.378591514 -0.049000564  0.078848996 -0.11588280 -0.15897835\nDalc        0.649893859  0.059963287  0.151598836 -0.09641793 -0.05916707\nWalc        1.000000000  0.070450703  0.208026186 -0.07964360 -0.06540510\nhealth      0.070450703  1.000000000  0.012122515 -0.06155381 -0.07666718\nabsences.x  0.208026186  0.012122515  1.000000000 -0.06946116 -0.07580245\nG1.x       -0.079643599 -0.061553810 -0.069461164  1.00000000  0.86588796\nG2.x       -0.065405098 -0.076667185 -0.075802450  0.86588796  1.00000000\nG3.x       -0.027623053 -0.047513775 -0.028118470  0.81859418  0.91357599\nabsences.y  0.150366322 -0.001077612  0.563815592 -0.08760610 -0.12636236\nG1.y       -0.158160549 -0.126244006 -0.092477610  0.59293522  0.54300736\nG2.y       -0.183295800 -0.170419288 -0.145164017  0.59517224  0.56521350\nG3.y       -0.182606733 -0.162249671 -0.135726385  0.54388734  0.49603265\n                   G3.x   absences.y        G1.y        G2.y         G3.y\nage        -0.206031862  0.047331821 -0.05054968  0.02936646 -0.009103257\nMedu        0.187754424  0.063530536  0.18142371  0.18964202  0.158979933\nFedu        0.141990610  0.086614161  0.11553102  0.13699442  0.107807478\ntraveltime -0.165110961  0.054308059 -0.17819166 -0.17961156 -0.153616466\nstudytime   0.045402243 -0.134969383  0.22973929  0.23105973  0.238553746\nfailures   -0.143032028  0.134242644 -0.26927657 -0.26992597 -0.327756897\nfamrel     -0.017975700 -0.029552034 -0.06419546 -0.02441686 -0.012829483\nfreetime   -0.006516202 -0.011429255 -0.08562990 -0.08723187 -0.110638817\ngoout      -0.118423233  0.128521823 -0.07190576 -0.09115155 -0.073423265\nDalc       -0.046964337  0.107538550 -0.23398211 -0.25300707 -0.279923052\nWalc       -0.027623053  0.150366322 -0.15816055 -0.18329580 -0.182606733\nhealth     -0.047513775 -0.001077612 -0.12624401 -0.17041929 -0.162249671\nabsences.x -0.028118470  0.563815592 -0.09247761 -0.14516402 -0.135726385\nG1.x        0.818594184 -0.087606100  0.59293522  0.59517224  0.543887345\nG2.x        0.913575991 -0.126362360  0.54300736  0.56521350  0.496032649\nG3.x        1.000000000 -0.116640460  0.52288461  0.54545279  0.475956497\nabsences.y -0.116640460  1.000000000 -0.09864117 -0.12070727 -0.071452010\nG1.y        0.522884610 -0.098641173  1.00000000  0.88415041  0.825414320\nG2.y        0.545452789 -0.120707273  0.88415041  1.00000000  0.894309821\nG3.y        0.475956497 -0.071452010  0.82541432  0.89430982  1.000000000",
    "crumbs": [
      "Home",
      "Homework 5",
      "summary"
    ]
  },
  {
    "objectID": "Homework05/pages/summary.html#quarto",
    "href": "Homework05/pages/summary.html#quarto",
    "title": "summary",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.",
    "crumbs": [
      "Home",
      "Homework 5",
      "summary"
    ]
  },
  {
    "objectID": "Homework05/pages/summary.html#running-code",
    "href": "Homework05/pages/summary.html#running-code",
    "title": "summary",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncombine_data &lt;- read_rds(\"../student/combined_data.rds\")\n\nYou can add options to executable code like this\n\n# Measure of center\nmeas_of_center &lt;- combine_data |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\nmeas_of_center_long &lt;- meas_of_center |&gt;\n  pivot_longer(cols = everything(),\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\n\n# View the result in long format\nhead(meas_of_center_long)\n\n# A tibble: 6 × 3\n  Feature    Statistic value\n  &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 age        Mean      16.5 \n2 age        Median    16   \n3 age        Std        1.14\n4 age        IQR        1   \n5 absences.x Mean       5.41\n6 absences.x Median     4   \n\nmeas_of_center_long\n\n# A tibble: 20 × 3\n   Feature    Statistic value\n   &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n 1 age        Mean      16.5 \n 2 age        Median    16   \n 3 age        Std        1.14\n 4 age        IQR        1   \n 5 absences.x Mean       5.41\n 6 absences.x Median     4   \n 7 absences.x Std        7.84\n 8 absences.x IQR        7.25\n 9 absences.y Mean       3.25\n10 absences.y Median     2   \n11 absences.y Std        4.56\n12 absences.y IQR        4   \n13 G3.x       Mean      11.0 \n14 G3.x       Median    11   \n15 G3.x       Std        4.30\n16 G3.x       IQR        5   \n17 G3.y       Mean      12.9 \n18 G3.y       Median    13   \n19 G3.y       Std        2.89\n20 G3.y       IQR        4   \n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\nsubset_sex_statistics &lt;- combine_data |&gt;\n  filter(sex==\"Male\") |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\nsubset_meas_of_center_long &lt;- subset_sex_statistics |&gt;\n  pivot_longer(cols = everything(),\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\n#View(subset_meas_of_center_long)\nhead(subset_meas_of_center_long)\n\n# A tibble: 6 × 3\n  Feature    Statistic value\n  &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 age        Mean      16.4 \n2 age        Median    16   \n3 age        Std        1.22\n4 age        IQR        2   \n5 absences.x Mean       4.97\n6 absences.x Median     4   \n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\nsubset_school_statistics &lt;- combine_data |&gt;\n  filter(school==\"Gabriel Pereira\") |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\nsubset_school_meas_of_center_long &lt;- subset_school_statistics |&gt;\n  pivot_longer(cols = everything(),\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\nhead(subset_school_meas_of_center_long)\n\n# A tibble: 6 × 3\n  Feature    Statistic value\n  &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 age        Mean      16.4 \n2 age        Median    16   \n3 age        Std        1.10\n4 age        IQR        1   \n5 absences.x Mean       5.64\n6 absences.x Median     4   \n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\nsubset_school_statistics &lt;- combine_data |&gt;\n  group_by(school) |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\nsubset_school_meas_of_center_long &lt;- subset_school_statistics |&gt;\n  pivot_longer(cols = -school,\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\nhead(subset_school_meas_of_center_long)\n\n# A tibble: 6 × 4\n  school          Feature    Statistic value\n  &lt;fct&gt;           &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 Gabriel Pereira age        Mean      16.4 \n2 Gabriel Pereira age        Median    16   \n3 Gabriel Pereira age        Std        1.10\n4 Gabriel Pereira age        IQR        1   \n5 Gabriel Pereira absences.x Mean       5.64\n6 Gabriel Pereira absences.x Median     4   \n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\nschool_sex_statistics &lt;- combine_data |&gt;\n  group_by(school, sex) |&gt;\n  summarize(across(c(\"age\",\"absences.x\",\"absences.y\",\"G3.x\", \"G3.y\"),\n                  list(\"Mean\" = mean, \"Median\" = median, \"Std\" = sd, \"IQR\" = IQR ),\n                  .names = \"{.col}_{.fn}\"))\n\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\nschool_sex_meas_of_center_long &lt;- school_sex_statistics |&gt;\n  pivot_longer(cols = -c(\"school\",\"sex\"),\n               names_to = c(\"Feature\", \"Statistic\"),\n                            names_sep = \"_\",\n               values_to = \"value\")\nhead(school_sex_meas_of_center_long)\n\n# A tibble: 6 × 5\n# Groups:   school [1]\n  school          sex    Feature    Statistic value\n  &lt;fct&gt;           &lt;fct&gt;  &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;\n1 Gabriel Pereira Female age        Mean      16.5 \n2 Gabriel Pereira Female age        Median    16   \n3 Gabriel Pereira Female age        Std        1.03\n4 Gabriel Pereira Female age        IQR        1   \n5 Gabriel Pereira Female absences.x Mean       6.12\n6 Gabriel Pereira Female absences.x Median     4   \n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\ncorr_mat &lt;- combine_data |&gt;\n  select(where(is.numeric))\n\n#pair_cor_mat &lt;- cor(corr_mat ,use = \"pairwise.complete.obs\")\n#pair_cor_ma\ncor(corr_mat)\n\n                    age         Medu         Fedu   traveltime    studytime\nage         1.000000000 -0.100949786 -0.107245313  0.160281754  0.043881028\nMedu       -0.100949786  1.000000000  0.621523869 -0.218794954  0.045425978\nFedu       -0.107245313  0.621523869  1.000000000 -0.193978042 -0.039289626\ntraveltime  0.160281754 -0.218794954 -0.193978042  1.000000000 -0.103243249\nstudytime   0.043881028  0.045425978 -0.039289626 -0.103243249  1.000000000\nfailures    0.243429617 -0.125608045 -0.157496645  0.104521138 -0.179515785\nfamrel      0.049940980 -0.067657746 -0.047260992 -0.027275744  0.001381660\nfreetime   -0.045824466  0.004013326 -0.001258667 -0.055899592 -0.091829632\ngoout       0.150794790  0.065832096  0.050593936  0.006559725 -0.009403345\nDalc        0.113952023  0.062866542  0.039126588  0.161272613 -0.172278644\nWalc        0.156817685 -0.004099434  0.023315814  0.105381347 -0.232402574\nhealth     -0.113225976 -0.011497172  0.067152933  0.020869407 -0.040979063\nabsences.x  0.143925170  0.099832689  0.024617771 -0.001464243 -0.082387919\nG1.x       -0.110379348  0.193071603  0.175557917 -0.088080745  0.125691378\nG2.x       -0.186187399  0.188735230  0.150418214 -0.184594967  0.089030600\nG3.x       -0.206031862  0.187754424  0.141990610 -0.165110961  0.045402243\nabsences.y  0.047331821  0.063530536  0.086614161  0.054308059 -0.134969383\nG1.y       -0.050549678  0.181423706  0.115531025 -0.178191662  0.229739293\nG2.y        0.029366456  0.189642017  0.136994424 -0.179611557  0.231059730\nG3.y       -0.009103257  0.158979933  0.107807478 -0.153616466  0.238553746\n              failures      famrel     freetime        goout        Dalc\nage         0.24342962  0.04994098 -0.045824466  0.150794790  0.11395202\nMedu       -0.12560804 -0.06765775  0.004013326  0.065832096  0.06286654\nFedu       -0.15749664 -0.04726099 -0.001258667  0.050593936  0.03912659\ntraveltime  0.10452114 -0.02727574 -0.055899592  0.006559725  0.16127261\nstudytime  -0.17951579  0.00138166 -0.091829632 -0.009403345 -0.17227864\nfailures    1.00000000  0.09437401  0.089757964  0.097119445  0.16213974\nfamrel      0.09437401  1.00000000  0.090946059  0.033058834 -0.05737989\nfreetime    0.08975796  0.09094606  1.000000000  0.243271162  0.20497133\ngoout       0.09711944  0.03305883  0.243271162  1.000000000  0.25703214\nDalc        0.16213974 -0.05737989  0.204971335  0.257032140  1.00000000\nWalc        0.16736348 -0.12634267  0.119021094  0.378591514  0.64989386\nhealth      0.04225577  0.13959656  0.070864701 -0.049000564  0.05996329\nabsences.x  0.12006863 -0.04806901 -0.046300383  0.078848996  0.15159884\nG1.x       -0.19581035 -0.05618075 -0.017100766 -0.115882796 -0.09641793\nG2.x       -0.16669179 -0.08710139 -0.029677027 -0.158978350 -0.05916707\nG3.x       -0.14303203 -0.01797570 -0.006516202 -0.118423233 -0.04696434\nabsences.y  0.13424264 -0.02955203 -0.011429255  0.128521823  0.10753855\nG1.y       -0.26927657 -0.06419546 -0.085629896 -0.071905764 -0.23398211\nG2.y       -0.26992597 -0.02441686 -0.087231866 -0.091151551 -0.25300707\nG3.y       -0.32775690 -0.01282948 -0.110638817 -0.073423265 -0.27992305\n                   Walc       health   absences.x        G1.x        G2.x\nage         0.156817685 -0.113225976  0.143925170 -0.11037935 -0.18618740\nMedu       -0.004099434 -0.011497172  0.099832689  0.19307160  0.18873523\nFedu        0.023315814  0.067152933  0.024617771  0.17555792  0.15041821\ntraveltime  0.105381347  0.020869407 -0.001464243 -0.08808075 -0.18459497\nstudytime  -0.232402574 -0.040979063 -0.082387919  0.12569138  0.08903060\nfailures    0.167363479  0.042255769  0.120068630 -0.19581035 -0.16669179\nfamrel     -0.126342672  0.139596565 -0.048069014 -0.05618075 -0.08710139\nfreetime    0.119021094  0.070864701 -0.046300383 -0.01710077 -0.02967703\ngoout       0.378591514 -0.049000564  0.078848996 -0.11588280 -0.15897835\nDalc        0.649893859  0.059963287  0.151598836 -0.09641793 -0.05916707\nWalc        1.000000000  0.070450703  0.208026186 -0.07964360 -0.06540510\nhealth      0.070450703  1.000000000  0.012122515 -0.06155381 -0.07666718\nabsences.x  0.208026186  0.012122515  1.000000000 -0.06946116 -0.07580245\nG1.x       -0.079643599 -0.061553810 -0.069461164  1.00000000  0.86588796\nG2.x       -0.065405098 -0.076667185 -0.075802450  0.86588796  1.00000000\nG3.x       -0.027623053 -0.047513775 -0.028118470  0.81859418  0.91357599\nabsences.y  0.150366322 -0.001077612  0.563815592 -0.08760610 -0.12636236\nG1.y       -0.158160549 -0.126244006 -0.092477610  0.59293522  0.54300736\nG2.y       -0.183295800 -0.170419288 -0.145164017  0.59517224  0.56521350\nG3.y       -0.182606733 -0.162249671 -0.135726385  0.54388734  0.49603265\n                   G3.x   absences.y        G1.y        G2.y         G3.y\nage        -0.206031862  0.047331821 -0.05054968  0.02936646 -0.009103257\nMedu        0.187754424  0.063530536  0.18142371  0.18964202  0.158979933\nFedu        0.141990610  0.086614161  0.11553102  0.13699442  0.107807478\ntraveltime -0.165110961  0.054308059 -0.17819166 -0.17961156 -0.153616466\nstudytime   0.045402243 -0.134969383  0.22973929  0.23105973  0.238553746\nfailures   -0.143032028  0.134242644 -0.26927657 -0.26992597 -0.327756897\nfamrel     -0.017975700 -0.029552034 -0.06419546 -0.02441686 -0.012829483\nfreetime   -0.006516202 -0.011429255 -0.08562990 -0.08723187 -0.110638817\ngoout      -0.118423233  0.128521823 -0.07190576 -0.09115155 -0.073423265\nDalc       -0.046964337  0.107538550 -0.23398211 -0.25300707 -0.279923052\nWalc       -0.027623053  0.150366322 -0.15816055 -0.18329580 -0.182606733\nhealth     -0.047513775 -0.001077612 -0.12624401 -0.17041929 -0.162249671\nabsences.x -0.028118470  0.563815592 -0.09247761 -0.14516402 -0.135726385\nG1.x        0.818594184 -0.087606100  0.59293522  0.59517224  0.543887345\nG2.x        0.913575991 -0.126362360  0.54300736  0.56521350  0.496032649\nG3.x        1.000000000 -0.116640460  0.52288461  0.54545279  0.475956497\nabsences.y -0.116640460  1.000000000 -0.09864117 -0.12070727 -0.071452010\nG1.y        0.522884610 -0.098641173  1.00000000  0.88415041  0.825414320\nG2.y        0.545452789 -0.120707273  0.88415041  1.00000000  0.894309821\nG3.y        0.475956497 -0.071452010  0.82541432  0.89430982  1.000000000",
    "crumbs": [
      "Home",
      "Homework 5",
      "summary"
    ]
  },
  {
    "objectID": "Homework05/pages/distribution_plots.html",
    "href": "Homework05/pages/distribution_plots.html",
    "title": "distribution_plots",
    "section": "",
    "text": "Load tidyverse. Read in the combined dataset\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncombine_data &lt;- read_rds(\"../student/combined_data.rds\")\n\nCreate histogram of age by sex\n\n# Histogram\nhist_age &lt;- ggplot(combine_data, aes(x = age, fill = sex)) +\n  geom_histogram(position = \"dodge\", alpha = 0.6, binwidth = 1) +\n  labs(\n    title = \"Histogram of Age by Sex\",\n    x = \"Age\",\n    y = \"Count\",\n    fill = \"Sex\"\n  ) +\n  theme_minimal()\nhist_age\n\n\n\n\n\n\n\n\nMost students are between ages 15–18 for both males and females.\nBoth groups have a similar age pattern, with slightly more female students overall.\nThis shows a balanced gender distribution in the dataset.\nCreate histogram of age by school\n\n# Density: Age by School with Failures linetype\nhistogram_plot &lt;- ggplot(combine_data, aes(x = age, fill = school)) +\n  geom_histogram(binwidth = 1, color = \"black\", position = \"dodge\") +\n  labs(\n    title = \"Histogram of Age by School\",\n    x = \"Age\",\n    y = \"Count\",\n    fill = \"School\"\n  ) +\n  theme_minimal()\n\nhistogram_plot\n\n\n\n\n\n\n\n\nThe Gabriel Pereira school has more students than Mousinho da Silveira.\nBoth schools have a similar age distribution, centered around 16–17 years.\nThis suggests both schools serve similar student age groups.\nCreate kernel density plot of age by school and failures\n\n# kernel density plot\n\nschool_kernel_plot &lt;- ggplot(combine_data, aes(x = age, color = school, linetype = as.factor(failures))) +\n  geom_density(alpha = 0.5, aes(fill = as.factor(failures))) +\n  theme_minimal() +\n  labs(\n    title = \"Kernel Density Plot of Age by school and Failures\",\n    x = \"Age\",\n    y = \"Density\",\n    color = \"school\",\n    linetype = \"Number of Failures\",\n    fill = \"Number of Failures\"\n  )\n\nschool_kernel_plot\n\n\n\n\n\n\n\n\nMost students have zero or very few academic failures.\nThe largest peak is among younger students (around 16–17 years).\nOlder students show more failures, especially in Mousinho da Silveira.\nCreate kernel density plot of age by address and failures\n\n# Kernel Density Plot\nkernel_plot &lt;- ggplot(combine_data, aes(x = age, color = address, linetype = as.factor(failures))) +\n  geom_density(alpha = 0.5, aes(fill = as.factor(failures))) +\n  theme_minimal() +\n  labs(\n    title = \"Kernel Density Plot of Age by Reason and Failures\",\n    x = \"Age\",\n    y = \"Density\",\n    color = \"address\",\n    linetype = \"Number of Failures\",\n    fill = \"Number of Failures\"\n  )\n\nkernel_plot\n\nWarning: Groups with fewer than two data points have been dropped.\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\n\nUrban students form most of the population, while rural students are fewer.\nStudents with no failures dominate across both groups.\nThis shows that location doesn’t strongly affect failure rate, but rural numbers are smaller.\nCreate boxplot of age by school with jittered points\n\n# boxplot\nschool_boxplot &lt;- ggplot(combine_data) +\n  geom_boxplot(aes(x = school, y = age, fill = school)) +\n  geom_jitter(aes(x = school, y = age), width = 0.1, alpha = 0.3) + \n  labs(\n    title = \"Age Distribution by School\",\n    x = \"School\",\n    y = \"Age\",\n    fill = \"School\"\n  ) +\n  theme_minimal()\n\nschool_boxplot\n\n\n\n\n\n\n\n\nThe median age is similar between schools (around 16–17).\nThere are some outliers, likely older students.\nGabriel Pereira shows a slightly wider range of ages than Mousinho da Silveira.\nCreate boxplot of absences by reason\n\n# Boxplot\nreason_boxplot &lt;- ggplot(combine_data) +\n geom_boxplot(aes(x = reason, y = absences.x, fill = reason))\n \nreason_boxplot \n\n\n\n\n\n\n\n\nMost students have low absences regardless of reason.\nA few students show high absences, seen as outliers.\nThe “Course” and “Home” reasons have the widest spread, meaning more variation.",
    "crumbs": [
      "Home",
      "Homework 5",
      "distribution_plots"
    ]
  },
  {
    "objectID": "Homework05/pages/distribution_plots.html#quarto",
    "href": "Homework05/pages/distribution_plots.html#quarto",
    "title": "distribution_plots",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.",
    "crumbs": [
      "Home",
      "Homework 5",
      "distribution_plots"
    ]
  },
  {
    "objectID": "Homework05/pages/distribution_plots.html#running-code",
    "href": "Homework05/pages/distribution_plots.html#running-code",
    "title": "distribution_plots",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncombine_data &lt;- read_rds(\"../student/combined_data.rds\")\n\nYou can add options to executable code like this\n\n# Histogram\nhist_age &lt;- ggplot(combine_data, aes(x = age, fill = sex)) +\n  geom_histogram(position = \"dodge\", alpha = 0.6, binwidth = 1) +\n  labs(\n    title = \"Histogram of Age by Sex\",\n    x = \"Age\",\n    y = \"Count\",\n    fill = \"Sex\"\n  ) +\n  theme_minimal()\nhist_age\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n# Density: Age by School with Failures linetype\nhistogram_plot &lt;- ggplot(combine_data, aes(x = age, fill = school)) +\n  geom_histogram(binwidth = 1, color = \"black\", position = \"dodge\") +\n  labs(\n    title = \"Histogram of Age by School\",\n    x = \"Age\",\n    y = \"Count\",\n    fill = \"School\"\n  ) +\n  theme_minimal()\n\nhistogram_plot\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n# kernel density plot\n\nschool_kernel_plot &lt;- ggplot(combine_data, aes(x = age, color = school, linetype = as.factor(failures))) +\n  geom_density(alpha = 0.5, aes(fill = as.factor(failures))) +\n  theme_minimal() +\n  labs(\n    title = \"Kernel Density Plot of Age by school and Failures\",\n    x = \"Age\",\n    y = \"Density\",\n    color = \"school\",\n    linetype = \"Number of Failures\",\n    fill = \"Number of Failures\"\n  )\n\nschool_kernel_plot\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n# Kernel Density Plot\nkernel_plot &lt;- ggplot(combine_data, aes(x = age, color = address, linetype = as.factor(failures))) +\n  geom_density(alpha = 0.5, aes(fill = as.factor(failures))) +\n  theme_minimal() +\n  labs(\n    title = \"Kernel Density Plot of Age by Reason and Failures\",\n    x = \"Age\",\n    y = \"Density\",\n    color = \"address\",\n    linetype = \"Number of Failures\",\n    fill = \"Number of Failures\"\n  )\n\nkernel_plot\n\nWarning: Groups with fewer than two data points have been dropped.\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n# boxplot\nschool_boxplot &lt;- ggplot(combine_data) +\n  geom_boxplot(aes(x = school, y = age, fill = school)) +\n  geom_jitter(aes(x = school, y = age), width = 0.1, alpha = 0.3) + \n  labs(\n    title = \"Age Distribution by School\",\n    x = \"School\",\n    y = \"Age\",\n    fill = \"School\"\n  ) +\n  theme_minimal()\n\nschool_boxplot\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n# Boxplot\nreason_boxplot &lt;- ggplot(combine_data) +\n geom_boxplot(aes(x = reason, y = absences.x, fill = reason))\n \nreason_boxplot",
    "crumbs": [
      "Home",
      "Homework 5",
      "distribution_plots"
    ]
  },
  {
    "objectID": "Homework05/index.html",
    "href": "Homework05/index.html",
    "title": "index",
    "section": "",
    "text": "EDA of the UCI Student Performance datasets.\nPages: -\n01 – Read & Merge\n02 – Joins & Factors\n03 – Categorical Tables\n04 – Numeric Summaries\n05 – Distribution Plots\n06 – Scatter Plots",
    "crumbs": [
      "Home",
      "Homework 5"
    ]
  },
  {
    "objectID": "Homework05/pages/categorical_tables.html",
    "href": "Homework05/pages/categorical_tables.html",
    "title": "categorical_tables",
    "section": "",
    "text": "Load tidyverse for data handling\nRead in the combined data file\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncombine_data &lt;- read_rds(\"../student/combined_data.rds\")\n\nCreate a one-way table for sex\n\n# One-way\none_way_sex &lt;- table(combine_data$sex, useNA = \"ifany\"); \none_way_sex\n\n\nFemale   Male \n   174    146 \n\n\nCreate a two-way table for sex and school\n\n# Two-way\nsex_by_school &lt;- table(combine_data$sex, combine_data$school); \nsex_by_school\n\n        \n         Gabriel Pereira Mousinho da Silveira\n  Female             153                   21\n  Male               134                   12\n\n\nCreate a three-way table for school, address, and reason\n\n# Three-way\nschool_addr_reason &lt;- table(combine_data$school, combine_data$address, combine_data$reason)\nschool_addr_reason[, , \"Course\"]\n\n                      \n                       Urban Rural\n  Gabriel Pereira         84    22\n  Mousinho da Silveira     6     6\n\n\nFilter data for students who live in urban areas. Make a two-way table for sex and school using the filtered urban data\n\n# Conditional via filtering\nurban &lt;- dplyr::filter(combine_data, address == \"Urban\")\ntable(urban$sex, urban$school)\n\n        \n         Gabriel Pereira Mousinho da Silveira\n  Female             130                    9\n  Male               109                    5\n\n\nCreate a three-way table and slice it to show the “Home” reason only\n\n# Conditional via slicing a 3-way table\nthree_way &lt;- table(combine_data$reason, combine_data$school, combine_data$sex)\nthree_way[\"Home\", , ]\n\n                      \n                       Female Male\n  Gabriel Pereira          38   41\n  Mousinho da Silveira      3    5\n\n\nUse dplyr to count combinations of address and school\nThen reshape it wide like a contingency table\n\n# dplyr + pivot_wider as contingency\ncombine_data |&gt;\ngroup_by(address, school) |&gt;\nsummarize(n = n(), .groups = \"drop\") |&gt;\ntidyr::pivot_wider(names_from = address, values_from = n)\n\n# A tibble: 2 × 3\n  school               Urban Rural\n  &lt;fct&gt;                &lt;int&gt; &lt;int&gt;\n1 Gabriel Pereira        239    48\n2 Mousinho da Silveira    14    19",
    "crumbs": [
      "Home",
      "Homework 5",
      "categorical_tables"
    ]
  },
  {
    "objectID": "Homework05/pages/categorical_tables.html#quarto",
    "href": "Homework05/pages/categorical_tables.html#quarto",
    "title": "categorical_tables",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.",
    "crumbs": [
      "Home",
      "Homework 5",
      "categorical_tables"
    ]
  },
  {
    "objectID": "Homework05/pages/categorical_tables.html#running-code",
    "href": "Homework05/pages/categorical_tables.html#running-code",
    "title": "categorical_tables",
    "section": "",
    "text": "Load tidyverse for data handling\nRead in the combined data file\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncombine_data &lt;- read_rds(\"../student/combined_data.rds\")\n\nCreate a one-way table for sex\n\n# One-way\none_way_sex &lt;- table(combine_data$sex, useNA = \"ifany\"); \none_way_sex\n\n\nFemale   Male \n   174    146 \n\n\nCreate a two-way table for sex and school\n\n# Two-way\nsex_by_school &lt;- table(combine_data$sex, combine_data$school); \nsex_by_school\n\n        \n         Gabriel Pereira Mousinho da Silveira\n  Female             153                   21\n  Male               134                   12\n\n\nCreate a three-way table for school, address, and reason\n\n# Three-way\nschool_addr_reason &lt;- table(combine_data$school, combine_data$address, combine_data$reason)\nschool_addr_reason[, , \"Course\"]\n\n                      \n                       Urban Rural\n  Gabriel Pereira         84    22\n  Mousinho da Silveira     6     6\n\n\nFilter data for students who live in urban areas. Make a two-way table for sex and school using the filtered urban data\n\n# Conditional via filtering\nurban &lt;- dplyr::filter(combine_data, address == \"Urban\")\ntable(urban$sex, urban$school)\n\n        \n         Gabriel Pereira Mousinho da Silveira\n  Female             130                    9\n  Male               109                    5\n\n\nCreate a three-way table and slice it to show the “Home” reason only\n\n# Conditional via slicing a 3-way table\nthree_way &lt;- table(combine_data$reason, combine_data$school, combine_data$sex)\nthree_way[\"Home\", , ]\n\n                      \n                       Female Male\n  Gabriel Pereira          38   41\n  Mousinho da Silveira      3    5\n\n\nUse dplyr to count combinations of address and school\nThen reshape it wide like a contingency table\n\n# dplyr + pivot_wider as contingency\ncombine_data |&gt;\ngroup_by(address, school) |&gt;\nsummarize(n = n(), .groups = \"drop\") |&gt;\ntidyr::pivot_wider(names_from = address, values_from = n)\n\n# A tibble: 2 × 3\n  school               Urban Rural\n  &lt;fct&gt;                &lt;int&gt; &lt;int&gt;\n1 Gabriel Pereira        239    48\n2 Mousinho da Silveira    14    19",
    "crumbs": [
      "Home",
      "Homework 5",
      "categorical_tables"
    ]
  },
  {
    "objectID": "Homework05/pages/scatter_plots.html",
    "href": "Homework05/pages/scatter_plots.html",
    "title": "scatter_plots",
    "section": "",
    "text": "Load tidyverse. Read in the combined dataset\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncombine_data &lt;- read_rds(\"../student/combined_data.rds\")\n\nScatter plot of Age vs Final Math Grade (G3.x) colored by Sex\n\n# G3_math vs Age colored by Sex\n#numeric_scatter &lt;- ggplot(combine_data) |&gt;\n#  aes(x = age, y = G3, color = sex)\n#numeric_scatter + geom_point()\nnumeric_scatter &lt;- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  labs(title = \"Scatter Plot of Age vs G3.x by Sex\",\n       x = \"Age\",\n       y = \"Final Grade(G3)\")\nnumeric_scatter\n\n\n\n\n\n\n\n\nYounger students tend to score slightly higher than older ones.\nGrades vary within both sexes, but females perform a bit better overall.\nThere’s no clear strong correlation between age and grade.\nScatter plot of Absences vs Final Math Grade (G3.x) colored by Sex\n\n# G3_math vs Absences_math colored by School\nnumeric_scatter_absence &lt;- ggplot(combine_data, aes(x = absences.x, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  labs(title = \"Scatter Plot of Absences vs G3.x by Sex\",\n       x = \"Absences\",\n       y = \"Final Grade(G3)\")\nnumeric_scatter_absence\n\n\n\n\n\n\n\n\nGrades decrease as absences increase for both sexes.\nStudents with perfect or near-perfect attendance score the highest.\nThis shows that attendance strongly affects final grades.\nScatter plot of Age vs G3.x faceted by School\n\n# Facet by School\nnumeric_scatter_facet &lt;- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_wrap(~ school) +  \n  labs(title = \"Scatter Plot of Age vs G3.x by Sex, Faceted by School\",\n    x = \"Age\",\n    y = \"Final Grade (G3)\",\n    color = \"Sex\"\n  ) +\n  theme_light()\n\nnumeric_scatter_facet\n\n\n\n\n\n\n\n\nBoth schools show similar age-grade trends.\nStudents at Gabriel Pereira perform slightly better overall.\nOlder students tend to have lower G3 grades in both schools.\nScatter plot of Absences vs G3.x faceted by Address\n\n# Facet by School × Address\nnumeric_scatter_absence_facet &lt;- ggplot(combine_data, aes(x = absences.x, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_wrap(~ address)\n  labs(title = \"Scatter Plot of Absences vs G3.x by Address\",\n       x = \"Absences\",\n       y = \"Final Grade(G3)\") +\n    theme_classic()\n\nNULL\n\nnumeric_scatter_absence_facet\n\n\n\n\n\n\n\n\nUrban and rural students both show the same pattern —\nMore absences lead to lower grades.\nUrban students dominate the sample, with slightly less grade drop for absences.\nScatter plot of Age vs G3.x faceted by both School and Sex\n\ncateg_scatter &lt;- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_grid(school ~ sex) +  # Facet by 'school' (rows) and 'sex' (columns)\n  labs(\n    title = \"Scatter Plot of Age vs G3.x by School and Sex\",\n    x = \"Age\",\n    y = \"Final Grade (G3)\",\n    color = \"Sex\"\n  ) \ncateg_scatter\n\n\n\n\n\n\n\n\nAcross both schools, females usually score a bit higher.\nMales show more variation in grades.\nThe pattern is consistent: younger students and fewer absences → higher grades.",
    "crumbs": [
      "Home",
      "Homework 5",
      "scatter_plots"
    ]
  },
  {
    "objectID": "Homework05/pages/scatter_plots.html#quarto",
    "href": "Homework05/pages/scatter_plots.html#quarto",
    "title": "scatter_plots",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.",
    "crumbs": [
      "Home",
      "Homework 5",
      "scatter_plots"
    ]
  },
  {
    "objectID": "Homework05/pages/scatter_plots.html#running-code",
    "href": "Homework05/pages/scatter_plots.html#running-code",
    "title": "scatter_plots",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncombine_data &lt;- read_rds(\"../student/combined_data.rds\")\n\nYou can add options to executable code like this\n\n# G3_math vs Age colored by Sex\n#numeric_scatter &lt;- ggplot(combine_data) |&gt;\n#  aes(x = age, y = G3, color = sex)\n#numeric_scatter + geom_point()\nnumeric_scatter &lt;- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  labs(title = \"Scatter Plot of Age vs G3.x by Sex\",\n       x = \"Age\",\n       y = \"Final Grade(G3)\")\nnumeric_scatter\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n# G3_math vs Absences_math colored by School\nnumeric_scatter_absence &lt;- ggplot(combine_data, aes(x = absences.x, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  labs(title = \"Scatter Plot of Absences vs G3.x by Sex\",\n       x = \"Absences\",\n       y = \"Final Grade(G3)\")\nnumeric_scatter_absence\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n# Facet by School\nnumeric_scatter_facet &lt;- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_wrap(~ school) +  \n  labs(title = \"Scatter Plot of Age vs G3.x by Sex, Faceted by School\",\n    x = \"Age\",\n    y = \"Final Grade (G3)\",\n    color = \"Sex\"\n  ) +\n  theme_light()\n\nnumeric_scatter_facet\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n# Facet by School × Address\nnumeric_scatter_absence_facet &lt;- ggplot(combine_data, aes(x = absences.x, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_wrap(~ address)\n  labs(title = \"Scatter Plot of Absences vs G3.x by Address\",\n       x = \"Absences\",\n       y = \"Final Grade(G3)\") +\n    theme_classic()\n\nNULL\n\nnumeric_scatter_absence_facet\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\ncateg_scatter &lt;- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_grid(school ~ sex) +  # Facet by 'school' (rows) and 'sex' (columns)\n  labs(\n    title = \"Scatter Plot of Age vs G3.x by School and Sex\",\n    x = \"Age\",\n    y = \"Final Grade (G3)\",\n    color = \"Sex\"\n  ) \ncateg_scatter\n\n\n\n\n\n\n\n\nThe echo: false option disables the printing of code (only output is displayed).",
    "crumbs": [
      "Home",
      "Homework 5",
      "scatter_plots"
    ]
  },
  {
    "objectID": "Homework05/pages/joins_factors.html",
    "href": "Homework05/pages/joins_factors.html",
    "title": "joins_factors",
    "section": "",
    "text": "Load tidyverse\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nRead both math and Portuguese datasets from local CSV files\n\n# Read combined data from previous output if needed\nmath_data &lt;- read_delim(\"../student/student-mat.csv\", delim = \";\", show_col_types = FALSE)\npor_data  &lt;- read_delim(\"../student/student-por.csv\", delim = \";\", show_col_types = FALSE)\n\nExclude grade and absence columns before joining\nGet list of common columns to join on\n\n# Convert four categorical variables to factors\nexclude   &lt;- c(\"G1\",\"G2\",\"G3\",\"paid\",\"absences\")\njoin_keys &lt;- setdiff(names(math_data), exclude)\n\nJoin the two datasets and convert four categorical variables to factors\n\ncombine_data &lt;- inner_join(math_data, por_data,\n                           by = join_keys,\n                           relationship = \"many-to-many\") |&gt;\n  mutate(\n    school  = factor(school, levels = c(\"GP\",\"MS\"),\n                     labels = c(\"Gabriel Pereira\",\"Mousinho da Silveira\")),\n    sex     = factor(sex, levels = c(\"F\",\"M\"),\n                     labels = c(\"Female\",\"Male\")),\n    address = factor(address, levels = c(\"U\",\"R\"),\n                     labels = c(\"Urban\",\"Rural\")),\n    reason  = factor(reason, levels = c(\"home\",\"reputation\",\"course\",\"other\"),\n                     labels = c(\"Home\",\"Reputation\",\"Course\",\"Other\"))\n  )\n\nShow structure of the converted factor variables\n\nstr(combine_data[, c(\"school\",\"sex\",\"address\",\"reason\")])\n\ntibble [320 × 4] (S3: tbl_df/tbl/data.frame)\n $ school : Factor w/ 2 levels \"Gabriel Pereira\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ sex    : Factor w/ 2 levels \"Female\",\"Male\": 1 1 1 1 2 2 1 2 2 1 ...\n $ address: Factor w/ 2 levels \"Urban\",\"Rural\": 1 1 1 1 1 1 1 1 1 1 ...\n $ reason : Factor w/ 4 levels \"Home\",\"Reputation\",..: 3 3 1 1 2 1 1 1 1 2 ...\n\n\nSave the combined dataset as an RDS file for reuse\n\nwrite_rds(combine_data, \"../student/combined_data.rds\")\n\nPrint confirmation message\n\nprint(\"Data export completed\")\n\n[1] \"Data export completed\"",
    "crumbs": [
      "Home",
      "Homework 5",
      "joins_factors"
    ]
  },
  {
    "objectID": "Homework05/pages/joins_factors.html#quarto",
    "href": "Homework05/pages/joins_factors.html#quarto",
    "title": "joins_factors",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Homework05/pages/joins_factors.html#running-code",
    "href": "Homework05/pages/joins_factors.html#running-code",
    "title": "joins_factors",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nYou can add options to executable code like this\n\n# Read combined data from previous output if needed\nmath_data &lt;- read_delim(\"../student/student-mat.csv\", delim = \";\", show_col_types = FALSE)\npor_data  &lt;- read_delim(\"../student/student-por.csv\", delim = \";\", show_col_types = FALSE)\n\nThe echo: false option disables the printing of code (only output is displayed).\nYou can add options to executable code like this\n\n# Convert four categorical variables to factors\nexclude   &lt;- c(\"G1\",\"G2\",\"G3\",\"paid\",\"absences\")\njoin_keys &lt;- setdiff(names(math_data), exclude)\n\nYou can add options to executable code like this\n\ncombine_data &lt;- inner_join(math_data, por_data,\n                           by = join_keys,\n                           relationship = \"many-to-many\") |&gt;\n  mutate(\n    school  = factor(school, levels = c(\"GP\",\"MS\"),\n                     labels = c(\"Gabriel Pereira\",\"Mousinho da Silveira\")),\n    sex     = factor(sex, levels = c(\"F\",\"M\"),\n                     labels = c(\"Female\",\"Male\")),\n    address = factor(address, levels = c(\"U\",\"R\"),\n                     labels = c(\"Urban\",\"Rural\")),\n    reason  = factor(reason, levels = c(\"home\",\"reputation\",\"course\",\"other\"),\n                     labels = c(\"Home\",\"Reputation\",\"Course\",\"Other\"))\n  )\n\ntest\n\nstr(combine_data[, c(\"school\",\"sex\",\"address\",\"reason\")])\n\ntibble [320 × 4] (S3: tbl_df/tbl/data.frame)\n $ school : Factor w/ 2 levels \"Gabriel Pereira\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ sex    : Factor w/ 2 levels \"Female\",\"Male\": 1 1 1 1 2 2 1 2 2 1 ...\n $ address: Factor w/ 2 levels \"Urban\",\"Rural\": 1 1 1 1 1 1 1 1 1 1 ...\n $ reason : Factor w/ 4 levels \"Home\",\"Reputation\",..: 3 3 1 1 2 1 1 1 1 2 ...\n\n\ntest\n\nwrite_rds(combine_data, \"../student/combined_data.rds\")\n\n\nprint(\"Data export completed\")\n\n[1] \"Data export completed\""
  },
  {
    "objectID": "Homework05/pages/helper_functions.html",
    "href": "Homework05/pages/helper_functions.html",
    "title": "helper_functions",
    "section": "",
    "text": "#suppressPackageStartupMessages({\n#  library(tidyverse)\n#  library(readr)\n#  library(ggplot2)\n#})\n\n#mat_tbl &lt;- read_delim(\"../student/student-mat.csv\", delim = \";\", show_col_types = FALSE)\n#por_tbl &lt;- read_delim(\"../student/student-por.csv\", delim = \";\", show_col_types = FALSE)\n\n\n#.exclude &lt;- c(\"G1\",\"G2\",\"G3\",\"paid\",\"absences\")\n#.join_keys &lt;- setdiff(intersect(names(mat_tbl), names(por_tbl)), .exclude)\n\n#comb &lt;- inner_join(mat_tbl, por_tbl, by = .join_keys, relationship = \"many-to-many\") |&gt;\n#  rename(\n#    G1_math = G1.x, G2_math = G2.x, G3_math = G3.x,\n#    G1_por = G1.y, G2_por = G2.y, G3_por = G3.y,\n#    absences_math = absences.x, absences_por = absences.y,\n#    paid_math = paid.x, paid_por = paid.y\n#  )\n\n\n#as_factorize &lt;- function(df) {\n#  df |&gt;\n#    mutate(\n#      school = factor(school, levels = c(\"GP\", \"MS\"), labels = c(\"Gabriel Pereira\",\"Mousinho #da Silveira\")),\n#      sex = factor(sex, levels = c(\"F\",\"M\"), labels = c(\"Female\",\"Male\")),\n#      address = factor(address,levels = c(\"U\",\"R\"), labels = c(\"Urban\",\"Rural\")),\n#      reason = factor(reason, levels = c(\"home\",\"reputation\",\"course\",\"other\"),\n#                      labels = c(\"Home\",\"Reputation\",\"Course\",\"Other\"))\n#    )\n#}\n\n#mat_fac &lt;- as_factorize(mat_tbl)\n#por_fac &lt;- as_factorize(por_tbl)\n#comb_fac &lt;- as_factorize(comb)"
  },
  {
    "objectID": "Homework05/pages/helper_functions.html#quarto",
    "href": "Homework05/pages/helper_functions.html#quarto",
    "title": "helper_functions",
    "section": "",
    "text": "#suppressPackageStartupMessages({\n#  library(tidyverse)\n#  library(readr)\n#  library(ggplot2)\n#})\n\n#mat_tbl &lt;- read_delim(\"../student/student-mat.csv\", delim = \";\", show_col_types = FALSE)\n#por_tbl &lt;- read_delim(\"../student/student-por.csv\", delim = \";\", show_col_types = FALSE)\n\n\n#.exclude &lt;- c(\"G1\",\"G2\",\"G3\",\"paid\",\"absences\")\n#.join_keys &lt;- setdiff(intersect(names(mat_tbl), names(por_tbl)), .exclude)\n\n#comb &lt;- inner_join(mat_tbl, por_tbl, by = .join_keys, relationship = \"many-to-many\") |&gt;\n#  rename(\n#    G1_math = G1.x, G2_math = G2.x, G3_math = G3.x,\n#    G1_por = G1.y, G2_por = G2.y, G3_por = G3.y,\n#    absences_math = absences.x, absences_por = absences.y,\n#    paid_math = paid.x, paid_por = paid.y\n#  )\n\n\n#as_factorize &lt;- function(df) {\n#  df |&gt;\n#    mutate(\n#      school = factor(school, levels = c(\"GP\", \"MS\"), labels = c(\"Gabriel Pereira\",\"Mousinho #da Silveira\")),\n#      sex = factor(sex, levels = c(\"F\",\"M\"), labels = c(\"Female\",\"Male\")),\n#      address = factor(address,levels = c(\"U\",\"R\"), labels = c(\"Urban\",\"Rural\")),\n#      reason = factor(reason, levels = c(\"home\",\"reputation\",\"course\",\"other\"),\n#                      labels = c(\"Home\",\"Reputation\",\"Course\",\"Other\"))\n#    )\n#}\n\n#mat_fac &lt;- as_factorize(mat_tbl)\n#por_fac &lt;- as_factorize(por_tbl)\n#comb_fac &lt;- as_factorize(comb)"
  },
  {
    "objectID": "Homework06/pages/task3_purrr.html",
    "href": "Homework06/pages/task3_purrr.html",
    "title": "task3_purrr",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n1. Fit a simple linear model\n\nlm_fit1 &lt;- lm(Sepal.Length ~ Sepal.Width + Species, data = iris)\nsummary(lm_fit1)\n\n\nCall:\nlm(formula = Sepal.Length ~ Sepal.Width + Species, data = iris)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.30711 -0.25713 -0.05325  0.19542  1.41253 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         2.2514     0.3698   6.089 9.57e-09 ***\nSepal.Width         0.8036     0.1063   7.557 4.19e-12 ***\nSpeciesversicolor   1.4587     0.1121  13.012  &lt; 2e-16 ***\nSpeciesvirginica    1.9468     0.1000  19.465  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.438 on 146 degrees of freedom\nMultiple R-squared:  0.7259,    Adjusted R-squared:  0.7203 \nF-statistic: 128.9 on 3 and 146 DF,  p-value: &lt; 2.2e-16\n\n\nPull out coefficients three ways\n\nlm_fit1$coefficients\n\n      (Intercept)       Sepal.Width Speciesversicolor  Speciesvirginica \n        2.2513932         0.8035609         1.4587431         1.9468166 \n\ncoef(lm_fit1)\n\n      (Intercept)       Sepal.Width Speciesversicolor  Speciesvirginica \n        2.2513932         0.8035609         1.4587431         1.9468166 \n\npluck(lm_fit1, \"coefficients\")\n\n      (Intercept)       Sepal.Width Speciesversicolor  Speciesvirginica \n        2.2513932         0.8035609         1.4587431         1.9468166 \n\n\n2. Fit multiple models and store in list\n\nlm_fit2 &lt;- lm(Sepal.Length~ Sepal.Width, data = iris)\nlm_fit3 &lt;- lm(Sepal.Length~ Petal.Width + Sepal.Width + Species, data = iris)\nlm_fit4 &lt;- lm(Sepal.Length~ Petal.Width + Petal.Length + Sepal.Width + Species,\ndata = iris)\nfits &lt;- list(lm_fit1, lm_fit2, lm_fit3, lm_fit4)\nfits\n\n[[1]]\n\nCall:\nlm(formula = Sepal.Length ~ Sepal.Width + Species, data = iris)\n\nCoefficients:\n      (Intercept)        Sepal.Width  Speciesversicolor   Speciesvirginica  \n           2.2514             0.8036             1.4587             1.9468  \n\n\n[[2]]\n\nCall:\nlm(formula = Sepal.Length ~ Sepal.Width, data = iris)\n\nCoefficients:\n(Intercept)  Sepal.Width  \n     6.5262      -0.2234  \n\n\n[[3]]\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Width + Sepal.Width + Species, \n    data = iris)\n\nCoefficients:\n      (Intercept)        Petal.Width        Sepal.Width  Speciesversicolor  \n           2.5211             0.3716             0.6982             0.9881  \n Speciesvirginica  \n           1.2376  \n\n\n[[4]]\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Width + Petal.Length + Sepal.Width + \n    Species, data = iris)\n\nCoefficients:\n      (Intercept)        Petal.Width       Petal.Length        Sepal.Width  \n           2.1713            -0.3152             0.8292             0.4959  \nSpeciesversicolor   Speciesvirginica  \n          -0.7236            -1.0235  \n\n\nUse purrr::map() and pluck() to extract coefficients from each model\n\ncoef_list &lt;- map(fits, pluck, \"coefficients\")\ncoef_list\n\n[[1]]\n      (Intercept)       Sepal.Width Speciesversicolor  Speciesvirginica \n        2.2513932         0.8035609         1.4587431         1.9468166 \n\n[[2]]\n(Intercept) Sepal.Width \n  6.5262226  -0.2233611 \n\n[[3]]\n      (Intercept)       Petal.Width       Sepal.Width Speciesversicolor \n        2.5210733         0.3715768         0.6982260         0.9881297 \n Speciesvirginica \n        1.2375878 \n\n[[4]]\n      (Intercept)       Petal.Width      Petal.Length       Sepal.Width \n        2.1712663        -0.3151552         0.8292439         0.4958889 \nSpeciesversicolor  Speciesvirginica \n       -0.7235620        -1.0234978 \n\n\n3. Apply confint() to each model using map()\n\nconfint_list &lt;- map(fits, confint)\nconfint_list\n\n[[1]]\n                      2.5 %   97.5 %\n(Intercept)       1.5206309 2.982156\nSepal.Width       0.5933983 1.013723\nSpeciesversicolor 1.2371791 1.680307\nSpeciesvirginica  1.7491525 2.144481\n\n[[2]]\n                2.5 %     97.5 %\n(Intercept)  5.579865 7.47258038\nSepal.Width -0.529820 0.08309785\n\n[[3]]\n                        2.5 %    97.5 %\n(Intercept)        1.74261803 3.2995285\nPetal.Width       -0.02042746 0.7635811\nSepal.Width        0.46205710 0.9343950\nSpeciesversicolor  0.44520784 1.5310516\nSpeciesvirginica   0.46412393 2.0110518\n\n[[4]]\n                       2.5 %      97.5 %\n(Intercept)        1.6182321  2.72430044\nPetal.Width       -0.6140049 -0.01630542\nPetal.Length       0.6937939  0.96469395\nSepal.Width        0.3257653  0.66601260\nSpeciesversicolor -1.1982739 -0.24885002\nSpeciesvirginica  -1.6831329 -0.36386273\n\n\n4. Plot histograms of residuals for each model\n\npar(mfrow = c(2, 2))\nresid_list &lt;- map(fits, \"residuals\")\nwalk(resid_list, hist, main = \"Residuals\", xlab = \"Residual value\", col = \"blue\")\n\n\n\n\n\n\n\n\n5. Add names to residual lists and use iwalk() to label plots properly\n\nnamed_resid_list &lt;- resid_list |&gt; set_names(c(\"fit1\", \"fit2\", \"fit3\", \"fit4\"))\n\npar(mfrow = c(2, 2))\niwalk(named_resid_list, ~hist(.x, main = paste(\"Residuals -\", .y), xlab = \"Residual value\", col = \"lightgreen\"))",
    "crumbs": [
      "Home",
      "Homework 6",
      "task3_purrr"
    ]
  },
  {
    "objectID": "Homework06/pages/task3_purrr.html#task-3-practice-with-purrr",
    "href": "Homework06/pages/task3_purrr.html#task-3-practice-with-purrr",
    "title": "task3_purrr",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n1. Fit a simple linear model\n\nlm_fit1 &lt;- lm(Sepal.Length ~ Sepal.Width + Species, data = iris)\nsummary(lm_fit1)\n\n\nCall:\nlm(formula = Sepal.Length ~ Sepal.Width + Species, data = iris)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.30711 -0.25713 -0.05325  0.19542  1.41253 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         2.2514     0.3698   6.089 9.57e-09 ***\nSepal.Width         0.8036     0.1063   7.557 4.19e-12 ***\nSpeciesversicolor   1.4587     0.1121  13.012  &lt; 2e-16 ***\nSpeciesvirginica    1.9468     0.1000  19.465  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.438 on 146 degrees of freedom\nMultiple R-squared:  0.7259,    Adjusted R-squared:  0.7203 \nF-statistic: 128.9 on 3 and 146 DF,  p-value: &lt; 2.2e-16\n\n\nPull out coefficients three ways\n\nlm_fit1$coefficients\n\n      (Intercept)       Sepal.Width Speciesversicolor  Speciesvirginica \n        2.2513932         0.8035609         1.4587431         1.9468166 \n\ncoef(lm_fit1)\n\n      (Intercept)       Sepal.Width Speciesversicolor  Speciesvirginica \n        2.2513932         0.8035609         1.4587431         1.9468166 \n\npluck(lm_fit1, \"coefficients\")\n\n      (Intercept)       Sepal.Width Speciesversicolor  Speciesvirginica \n        2.2513932         0.8035609         1.4587431         1.9468166 \n\n\n2. Fit multiple models and store in list\n\nlm_fit2 &lt;- lm(Sepal.Length~ Sepal.Width, data = iris)\nlm_fit3 &lt;- lm(Sepal.Length~ Petal.Width + Sepal.Width + Species, data = iris)\nlm_fit4 &lt;- lm(Sepal.Length~ Petal.Width + Petal.Length + Sepal.Width + Species,\ndata = iris)\nfits &lt;- list(lm_fit1, lm_fit2, lm_fit3, lm_fit4)\nfits\n\n[[1]]\n\nCall:\nlm(formula = Sepal.Length ~ Sepal.Width + Species, data = iris)\n\nCoefficients:\n      (Intercept)        Sepal.Width  Speciesversicolor   Speciesvirginica  \n           2.2514             0.8036             1.4587             1.9468  \n\n\n[[2]]\n\nCall:\nlm(formula = Sepal.Length ~ Sepal.Width, data = iris)\n\nCoefficients:\n(Intercept)  Sepal.Width  \n     6.5262      -0.2234  \n\n\n[[3]]\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Width + Sepal.Width + Species, \n    data = iris)\n\nCoefficients:\n      (Intercept)        Petal.Width        Sepal.Width  Speciesversicolor  \n           2.5211             0.3716             0.6982             0.9881  \n Speciesvirginica  \n           1.2376  \n\n\n[[4]]\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Width + Petal.Length + Sepal.Width + \n    Species, data = iris)\n\nCoefficients:\n      (Intercept)        Petal.Width       Petal.Length        Sepal.Width  \n           2.1713            -0.3152             0.8292             0.4959  \nSpeciesversicolor   Speciesvirginica  \n          -0.7236            -1.0235  \n\n\nUse purrr::map() and pluck() to extract coefficients from each model\n\ncoef_list &lt;- map(fits, pluck, \"coefficients\")\ncoef_list\n\n[[1]]\n      (Intercept)       Sepal.Width Speciesversicolor  Speciesvirginica \n        2.2513932         0.8035609         1.4587431         1.9468166 \n\n[[2]]\n(Intercept) Sepal.Width \n  6.5262226  -0.2233611 \n\n[[3]]\n      (Intercept)       Petal.Width       Sepal.Width Speciesversicolor \n        2.5210733         0.3715768         0.6982260         0.9881297 \n Speciesvirginica \n        1.2375878 \n\n[[4]]\n      (Intercept)       Petal.Width      Petal.Length       Sepal.Width \n        2.1712663        -0.3151552         0.8292439         0.4958889 \nSpeciesversicolor  Speciesvirginica \n       -0.7235620        -1.0234978 \n\n\n3. Apply confint() to each model using map()\n\nconfint_list &lt;- map(fits, confint)\nconfint_list\n\n[[1]]\n                      2.5 %   97.5 %\n(Intercept)       1.5206309 2.982156\nSepal.Width       0.5933983 1.013723\nSpeciesversicolor 1.2371791 1.680307\nSpeciesvirginica  1.7491525 2.144481\n\n[[2]]\n                2.5 %     97.5 %\n(Intercept)  5.579865 7.47258038\nSepal.Width -0.529820 0.08309785\n\n[[3]]\n                        2.5 %    97.5 %\n(Intercept)        1.74261803 3.2995285\nPetal.Width       -0.02042746 0.7635811\nSepal.Width        0.46205710 0.9343950\nSpeciesversicolor  0.44520784 1.5310516\nSpeciesvirginica   0.46412393 2.0110518\n\n[[4]]\n                       2.5 %      97.5 %\n(Intercept)        1.6182321  2.72430044\nPetal.Width       -0.6140049 -0.01630542\nPetal.Length       0.6937939  0.96469395\nSepal.Width        0.3257653  0.66601260\nSpeciesversicolor -1.1982739 -0.24885002\nSpeciesvirginica  -1.6831329 -0.36386273\n\n\n4. Plot histograms of residuals for each model\n\npar(mfrow = c(2, 2))\nresid_list &lt;- map(fits, \"residuals\")\nwalk(resid_list, hist, main = \"Residuals\", xlab = \"Residual value\", col = \"blue\")\n\n\n\n\n\n\n\n\n5. Add names to residual lists and use iwalk() to label plots properly\n\nnamed_resid_list &lt;- resid_list |&gt; set_names(c(\"fit1\", \"fit2\", \"fit3\", \"fit4\"))\n\npar(mfrow = c(2, 2))\niwalk(named_resid_list, ~hist(.x, main = paste(\"Residuals -\", .y), xlab = \"Residual value\", col = \"lightgreen\"))",
    "crumbs": [
      "Home",
      "Homework 6",
      "task3_purrr"
    ]
  },
  {
    "objectID": "Homework06/pages/task2_functions.html",
    "href": "Homework06/pages/task2_functions.html",
    "title": "task2_functions",
    "section": "",
    "text": "Write a basic function (call it getRMSE()) that takes in a vector of responses and a vector of predictions and outputs the RMSE.\n\n\ngetRMSE &lt;- function(responses, predictions, na.rm = TRUE) {\n \n  # Calculate the RMSE\n  cal_rmse &lt;- sqrt(mean((responses - predictions)^2, na.rm = na.rm))\n  \n  return(cal_rmse)\n}\n\n# Example usage\nresponses &lt;- c(3, 9, NA, 7, NA, 34, 67)\npredictions &lt;- c(2, 5, 8, 23, 51, 21, 34)\n\nrmse_result &lt;- getRMSE(responses, predictions)\nprint(rmse_result)\n\n[1] 17.49857\n\n\n\nRun the following code to create some response values and predictions.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n• Test your RMSE function using this data.\n\nrmse_result1 &lt;- getRMSE(resp, pred)\nprint(paste0(\"Without NA \\n \", rmse_result1))\n\n[1] \"Without NA \\n 0.958167655151933\"\n\n\n• Repeat after replacing two of the response values with missing values (NA_real_). – Test your RMSE function with and without specifying the behavior to deal with missing values.\n\n# Change the first two response values with NA_real_\nresp[c(1, 2)] &lt;- NA_real_\n\n\n#Find RMSE, removing NA values if present\nrmse_without_na &lt;- getRMSE(resp, pred, na.rm = TRUE)\nprint(paste(\"RMSE without NA handling (na.rm = TRUE):\", rmse_without_na))\n\n[1] \"RMSE without NA handling (na.rm = TRUE): 0.966169936538663\"\n\n\n\n# Test RMSE with explicit handling of NA\nrmse_with_na &lt;- getRMSE(resp, pred, na.rm = FALSE)\nprint(paste(\"RMSE with NA  (na.rm = FALSE):\", rmse_with_na))\n\n[1] \"RMSE with NA  (na.rm = FALSE): NA\"\n\n\n\nAnother common metric for evaluating predictions is mean absolute deviation. Write a function called getMAE() that follows the specifications of the getRMSE() function. getMAE use for handling the missing values\n\n\ngetMAE &lt;- function(responses, predictions, na.rm = TRUE){\n  # Calculate MAE\n  abs_value &lt;- abs(responses - predictions)\n  mae_cal &lt;- mean(abs_value, na.rm = na.rm)\n  return(mae_cal)\n}\n\n\n# Example\nresponses &lt;- c(3, 9, NA, 7, 6, 34, 67)\npredictions &lt;- c(2, 5, 8, 23, 51, 21, 34)\n\nmae_result &lt;- getMAE(responses, predictions)\nprint(paste(\"Mean Absolute Value is\", mae_result))\n\n[1] \"Mean Absolute Value is 18.6666666666667\"\n\n\n\nRun the following code to create some response values and predictions.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n• Test MAE function by using given data.\n\nmae_result1 &lt;- getMAE(resp, pred)\nprint(paste(\"The MAE value without NA \", mae_result1))\n\n[1] \"The MAE value without NA  0.815577593682669\"\n\n\n• Repeat after replacing two of the response values with missing values (NA_real_). – Test your MAE function with and without specifying the behavior to deal with missing values.\n\n# Change 2 values with the missing values NA_real_\nresp[c(1,4)] &lt;- NA_real_\n\n\n# Without NA value\nmae_without_NA &lt;- getMAE(resp,pred)\nprint(paste(\"Result of MAE Without NA values \", mae_without_NA))\n\n[1] \"Result of MAE Without NA values  0.807148944242633\"\n\n\n\n# with NA values\nmae_with_na &lt;- getMAE(resp, pred, na.rm = FALSE)\nprint(paste(\"MAE value with na \", mae_with_na))\n\n[1] \"MAE value with na  NA\"\n\n#print(mae_with_na)\n\n\ncreate a wrapper function that can be used to get either or both metrics returned with a single function call. Do not rewrite your above two functions, call them inside the wrapper function (we would call the getRMSE() and getMAE() functions helper functions). When returning your values, give them appropriate names.\n\n\n# helper functions getRMSE() and getMAE() :\ngetRMSE &lt;- function(responses, predictions, na.rm = TRUE) {\n  sqrt(mean((responses - predictions)^2, na.rm = na.rm))\n}\n\ngetMAE &lt;- function(responses, predictions, na.rm = TRUE) {\n  mean(abs(responses - predictions), na.rm = na.rm)\n}\n\n# Wrapper function\ngetMetrics &lt;- function(responses, predictions, metric = \"both\", na.rm = TRUE) {\n  \n  # Check if response and prediction inputs are numeric atomic vectors\n  if (!(is.numeric(responses) && is.atomic(responses) && is.vector(responses))) {\n    stop(\"Error: 'responses' must be a numeric atomic vector.\")\n  }\n  \n  if (!(is.numeric(predictions) && is.atomic(predictions) && is.vector(predictions))) {\n    stop(\"Error: 'predictions' must be a numeric atomic vector.\")\n  }\n  \n  # Initialize an empty list \n  result &lt;- list()\n\n  # Compute the required metric based on the argument\n  if (metric == \"RMSE\" || metric == \"both\") {\n    result$RMSE &lt;- getRMSE(responses, predictions, na.rm = na.rm)\n  }\n  \n  if (metric == \"MAE\" || metric == \"both\") {\n    result$MAE &lt;- getMAE(responses, predictions, na.rm = na.rm)\n  }\n  \n  # If there is only single metric\n  if (metric != \"both\" && length(result) == 1) {\n    result &lt;- unlist(result)\n  }\n  \n  return(result)\n}\n\n# Input \nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n# Test wrapper for both RMSE and MAE\nboth_metrics &lt;- getMetrics(resp, pred)\nprint(both_metrics)\n\n$RMSE\n[1] 0.9581677\n\n$MAE\n[1] 0.8155776\n\n# Test wrapper for RMSE\nrmse_only &lt;- getMetrics(resp, pred, metric = \"RMSE\")\nprint(rmse_only)\n\n     RMSE \n0.9581677 \n\n# Test wrapper for MAE\nmae_only &lt;- getMetrics(resp, pred, metric = \"MAE\")\nprint(mae_only)\n\n      MAE \n0.8155776 \n\n# Test with invalid input (non-numeric vector)\n#invalid_input &lt;- getMetrics(c(\"a\", \"b\", \"c\"), pred)\n\n\nRun the following code to create some response values and predictions:\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\n# Define RMSE Wrapper function\nrmseWrapper &lt;- function(actual, predicted, na.rm = TRUE) {\n  if (!is.numeric(actual) || !is.numeric(predicted)) {\n    stop(\"Both 'actual' and 'predicted' should be numeric vectors.\")\n  }\n  \n  if (na.rm) {\n    valid &lt;- !is.na(actual) & !is.na(predicted)\n    actual &lt;- actual[valid]\n    predicted &lt;- predicted[valid]\n  }\n  \n  sqrt(mean((actual - predicted)^2, na.rm = na.rm))\n}\n\n# Define MAE Wrapper function\nmaeWrapper &lt;- function(actual, predicted, na.rm = TRUE) {\n  if (!is.numeric(actual) || !is.numeric(predicted)) {\n    stop(\"Both 'actual' and 'predicted' should be numeric vectors.\")\n  }\n  \n  if (na.rm) {\n    valid &lt;- !is.na(actual) & !is.na(predicted)\n    actual &lt;- actual[valid]\n    predicted &lt;- predicted[valid]\n  }\n  \n  mean(abs(actual - predicted), na.rm = na.rm)\n}\n\n• Test your new function using this data. Call it once asking for each metric individually and once specifying both metrics • Repeat with replacing two of the response values with missing values (NA_real_). • Finally, test your function by passing it incorrect data (i.e. a data frame or something else instead of vectors.\n\n# run the wrapper function\nrmse_value &lt;- rmseWrapper(resp, pred)\nprint(paste(\"RMSE:\", rmse_value))\n\n[1] \"RMSE: 0.958167655151933\"\n\n\nTest the MAE wrapper function:\n\nmae_value &lt;- maeWrapper(resp, pred)\nprint(paste(\"MAE:\", mae_value))\n\n[1] \"MAE: 0.815577593682669\"\n\n\nTest both functions individually:\n\n# Test RMSE\nrmse_result &lt;- rmseWrapper(resp, pred)\nprint(paste(\"Individual RMSE:\", rmse_result))\n\n[1] \"Individual RMSE: 0.958167655151933\"\n\n# Test MAE\nmae_result &lt;- maeWrapper(resp, pred)\nprint(paste(\"Individual MAE:\", mae_result))\n\n[1] \"Individual MAE: 0.815577593682669\"\n\n\nStep 3: Handle missing values\n\n# missing values into the response data\nresp[1] &lt;- NA_real_\nresp[2] &lt;- NA_real_\n\n# RMSE with missing values\nrmse_with_na &lt;- rmseWrapper(resp, pred, na.rm = TRUE)\nprint(paste(\"RMSE with NA \", rmse_with_na))\n\n[1] \"RMSE with NA  0.966169936538663\"\n\n# MAE with missing values\nmae_with_na &lt;- maeWrapper(resp, pred, na.rm = TRUE)\nprint(paste(\"MAE with NA \", mae_with_na))\n\n[1] \"MAE with NA  0.824120056659464\"\n\n# missing values without na.rm\nrmse_with_na_false &lt;- rmseWrapper(resp, pred, na.rm = FALSE)\nprint(paste(\"RMSE with NA (na.rm = FALSE):\", rmse_with_na_false))\n\n[1] \"RMSE with NA (na.rm = FALSE): NA\"\n\nmae_with_na_false &lt;- maeWrapper(resp, pred, na.rm = FALSE)\nprint(paste(\"MAE with NA (na.rm = FALSE):\", mae_with_na_false))\n\n[1] \"MAE with NA (na.rm = FALSE): NA\"\n\n\nStep 4: Test with incorrect data types\n\n# Check the incorrect input (data frame)\n#incorrect_data &lt;- data.frame(resp, pred)\n\n# Expecting error messages here\n#try(rmseWrapper(incorrect_data, pred))\n#try(maeWrapper(resp, incorrect_data))",
    "crumbs": [
      "Home",
      "Homework 6",
      "task2_functions"
    ]
  },
  {
    "objectID": "Homework06/pages/task2_functions.html#task-2-writing-r-functions",
    "href": "Homework06/pages/task2_functions.html#task-2-writing-r-functions",
    "title": "task2_functions",
    "section": "",
    "text": "Write a basic function (call it getRMSE()) that takes in a vector of responses and a vector of predictions and outputs the RMSE.\n\n\ngetRMSE &lt;- function(responses, predictions, na.rm = TRUE) {\n \n  # Calculate the RMSE\n  cal_rmse &lt;- sqrt(mean((responses - predictions)^2, na.rm = na.rm))\n  \n  return(cal_rmse)\n}\n\n# Example usage\nresponses &lt;- c(3, 9, NA, 7, NA, 34, 67)\npredictions &lt;- c(2, 5, 8, 23, 51, 21, 34)\n\nrmse_result &lt;- getRMSE(responses, predictions)\nprint(rmse_result)\n\n[1] 17.49857\n\n\n\nRun the following code to create some response values and predictions.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n• Test your RMSE function using this data.\n\nrmse_result1 &lt;- getRMSE(resp, pred)\nprint(paste0(\"Without NA \\n \", rmse_result1))\n\n[1] \"Without NA \\n 0.958167655151933\"\n\n\n• Repeat after replacing two of the response values with missing values (NA_real_). – Test your RMSE function with and without specifying the behavior to deal with missing values.\n\n# Change the first two response values with NA_real_\nresp[c(1, 2)] &lt;- NA_real_\n\n\n#Find RMSE, removing NA values if present\nrmse_without_na &lt;- getRMSE(resp, pred, na.rm = TRUE)\nprint(paste(\"RMSE without NA handling (na.rm = TRUE):\", rmse_without_na))\n\n[1] \"RMSE without NA handling (na.rm = TRUE): 0.966169936538663\"\n\n\n\n# Test RMSE with explicit handling of NA\nrmse_with_na &lt;- getRMSE(resp, pred, na.rm = FALSE)\nprint(paste(\"RMSE with NA  (na.rm = FALSE):\", rmse_with_na))\n\n[1] \"RMSE with NA  (na.rm = FALSE): NA\"\n\n\n\nAnother common metric for evaluating predictions is mean absolute deviation. Write a function called getMAE() that follows the specifications of the getRMSE() function. getMAE use for handling the missing values\n\n\ngetMAE &lt;- function(responses, predictions, na.rm = TRUE){\n  # Calculate MAE\n  abs_value &lt;- abs(responses - predictions)\n  mae_cal &lt;- mean(abs_value, na.rm = na.rm)\n  return(mae_cal)\n}\n\n\n# Example\nresponses &lt;- c(3, 9, NA, 7, 6, 34, 67)\npredictions &lt;- c(2, 5, 8, 23, 51, 21, 34)\n\nmae_result &lt;- getMAE(responses, predictions)\nprint(paste(\"Mean Absolute Value is\", mae_result))\n\n[1] \"Mean Absolute Value is 18.6666666666667\"\n\n\n\nRun the following code to create some response values and predictions.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n• Test MAE function by using given data.\n\nmae_result1 &lt;- getMAE(resp, pred)\nprint(paste(\"The MAE value without NA \", mae_result1))\n\n[1] \"The MAE value without NA  0.815577593682669\"\n\n\n• Repeat after replacing two of the response values with missing values (NA_real_). – Test your MAE function with and without specifying the behavior to deal with missing values.\n\n# Change 2 values with the missing values NA_real_\nresp[c(1,4)] &lt;- NA_real_\n\n\n# Without NA value\nmae_without_NA &lt;- getMAE(resp,pred)\nprint(paste(\"Result of MAE Without NA values \", mae_without_NA))\n\n[1] \"Result of MAE Without NA values  0.807148944242633\"\n\n\n\n# with NA values\nmae_with_na &lt;- getMAE(resp, pred, na.rm = FALSE)\nprint(paste(\"MAE value with na \", mae_with_na))\n\n[1] \"MAE value with na  NA\"\n\n#print(mae_with_na)\n\n\ncreate a wrapper function that can be used to get either or both metrics returned with a single function call. Do not rewrite your above two functions, call them inside the wrapper function (we would call the getRMSE() and getMAE() functions helper functions). When returning your values, give them appropriate names.\n\n\n# helper functions getRMSE() and getMAE() :\ngetRMSE &lt;- function(responses, predictions, na.rm = TRUE) {\n  sqrt(mean((responses - predictions)^2, na.rm = na.rm))\n}\n\ngetMAE &lt;- function(responses, predictions, na.rm = TRUE) {\n  mean(abs(responses - predictions), na.rm = na.rm)\n}\n\n# Wrapper function\ngetMetrics &lt;- function(responses, predictions, metric = \"both\", na.rm = TRUE) {\n  \n  # Check if response and prediction inputs are numeric atomic vectors\n  if (!(is.numeric(responses) && is.atomic(responses) && is.vector(responses))) {\n    stop(\"Error: 'responses' must be a numeric atomic vector.\")\n  }\n  \n  if (!(is.numeric(predictions) && is.atomic(predictions) && is.vector(predictions))) {\n    stop(\"Error: 'predictions' must be a numeric atomic vector.\")\n  }\n  \n  # Initialize an empty list \n  result &lt;- list()\n\n  # Compute the required metric based on the argument\n  if (metric == \"RMSE\" || metric == \"both\") {\n    result$RMSE &lt;- getRMSE(responses, predictions, na.rm = na.rm)\n  }\n  \n  if (metric == \"MAE\" || metric == \"both\") {\n    result$MAE &lt;- getMAE(responses, predictions, na.rm = na.rm)\n  }\n  \n  # If there is only single metric\n  if (metric != \"both\" && length(result) == 1) {\n    result &lt;- unlist(result)\n  }\n  \n  return(result)\n}\n\n# Input \nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n# Test wrapper for both RMSE and MAE\nboth_metrics &lt;- getMetrics(resp, pred)\nprint(both_metrics)\n\n$RMSE\n[1] 0.9581677\n\n$MAE\n[1] 0.8155776\n\n# Test wrapper for RMSE\nrmse_only &lt;- getMetrics(resp, pred, metric = \"RMSE\")\nprint(rmse_only)\n\n     RMSE \n0.9581677 \n\n# Test wrapper for MAE\nmae_only &lt;- getMetrics(resp, pred, metric = \"MAE\")\nprint(mae_only)\n\n      MAE \n0.8155776 \n\n# Test with invalid input (non-numeric vector)\n#invalid_input &lt;- getMetrics(c(\"a\", \"b\", \"c\"), pred)\n\n\nRun the following code to create some response values and predictions:\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\n# Define RMSE Wrapper function\nrmseWrapper &lt;- function(actual, predicted, na.rm = TRUE) {\n  if (!is.numeric(actual) || !is.numeric(predicted)) {\n    stop(\"Both 'actual' and 'predicted' should be numeric vectors.\")\n  }\n  \n  if (na.rm) {\n    valid &lt;- !is.na(actual) & !is.na(predicted)\n    actual &lt;- actual[valid]\n    predicted &lt;- predicted[valid]\n  }\n  \n  sqrt(mean((actual - predicted)^2, na.rm = na.rm))\n}\n\n# Define MAE Wrapper function\nmaeWrapper &lt;- function(actual, predicted, na.rm = TRUE) {\n  if (!is.numeric(actual) || !is.numeric(predicted)) {\n    stop(\"Both 'actual' and 'predicted' should be numeric vectors.\")\n  }\n  \n  if (na.rm) {\n    valid &lt;- !is.na(actual) & !is.na(predicted)\n    actual &lt;- actual[valid]\n    predicted &lt;- predicted[valid]\n  }\n  \n  mean(abs(actual - predicted), na.rm = na.rm)\n}\n\n• Test your new function using this data. Call it once asking for each metric individually and once specifying both metrics • Repeat with replacing two of the response values with missing values (NA_real_). • Finally, test your function by passing it incorrect data (i.e. a data frame or something else instead of vectors.\n\n# run the wrapper function\nrmse_value &lt;- rmseWrapper(resp, pred)\nprint(paste(\"RMSE:\", rmse_value))\n\n[1] \"RMSE: 0.958167655151933\"\n\n\nTest the MAE wrapper function:\n\nmae_value &lt;- maeWrapper(resp, pred)\nprint(paste(\"MAE:\", mae_value))\n\n[1] \"MAE: 0.815577593682669\"\n\n\nTest both functions individually:\n\n# Test RMSE\nrmse_result &lt;- rmseWrapper(resp, pred)\nprint(paste(\"Individual RMSE:\", rmse_result))\n\n[1] \"Individual RMSE: 0.958167655151933\"\n\n# Test MAE\nmae_result &lt;- maeWrapper(resp, pred)\nprint(paste(\"Individual MAE:\", mae_result))\n\n[1] \"Individual MAE: 0.815577593682669\"\n\n\nStep 3: Handle missing values\n\n# missing values into the response data\nresp[1] &lt;- NA_real_\nresp[2] &lt;- NA_real_\n\n# RMSE with missing values\nrmse_with_na &lt;- rmseWrapper(resp, pred, na.rm = TRUE)\nprint(paste(\"RMSE with NA \", rmse_with_na))\n\n[1] \"RMSE with NA  0.966169936538663\"\n\n# MAE with missing values\nmae_with_na &lt;- maeWrapper(resp, pred, na.rm = TRUE)\nprint(paste(\"MAE with NA \", mae_with_na))\n\n[1] \"MAE with NA  0.824120056659464\"\n\n# missing values without na.rm\nrmse_with_na_false &lt;- rmseWrapper(resp, pred, na.rm = FALSE)\nprint(paste(\"RMSE with NA (na.rm = FALSE):\", rmse_with_na_false))\n\n[1] \"RMSE with NA (na.rm = FALSE): NA\"\n\nmae_with_na_false &lt;- maeWrapper(resp, pred, na.rm = FALSE)\nprint(paste(\"MAE with NA (na.rm = FALSE):\", mae_with_na_false))\n\n[1] \"MAE with NA (na.rm = FALSE): NA\"\n\n\nStep 4: Test with incorrect data types\n\n# Check the incorrect input (data frame)\n#incorrect_data &lt;- data.frame(resp, pred)\n\n# Expecting error messages here\n#try(rmseWrapper(incorrect_data, pred))\n#try(maeWrapper(resp, incorrect_data))",
    "crumbs": [
      "Home",
      "Homework 6",
      "task2_functions"
    ]
  },
  {
    "objectID": "Homework06/index.html",
    "href": "Homework06/index.html",
    "title": "index",
    "section": "",
    "text": "Homework 06 -\nTask 1 – Conceptual question Task 2 – Writing R functions Task 3 – Using purrr for model fitting",
    "crumbs": [
      "Home",
      "Homework 6"
    ]
  },
  {
    "objectID": "Homework06/pages/task1_conceptual.html",
    "href": "Homework06/pages/task1_conceptual.html",
    "title": "task1_conceptual",
    "section": "",
    "text": "Answer:\nlapply():- Applies a function to elements in a list or a vector and returns the results in a list.The syntax of lapply is lapply(x, FUN,…) where x is a vector, FUN: the function to be applied to each element of x. purrr function:– purrr::map()– it is more consistency and some helper functions are there, it offers more control over output types and integrates well with the tidyverse.\n\n\n\n\nlist1 &lt;- c(45,57,27,89,25,44)\nlist2 &lt;- c(34,23,567,45,67,26)\n\nmy_list &lt;- list(data.frame(list1, list2))\n\ncor_results &lt;- lapply(my_list, function(numeric_matrix) {\n  cor(numeric_matrix, method = \"kendall\")\n})\n\n# print the correlation results\ncor_results\n\n[[1]]\n           list1      list2\nlist1  1.0000000 -0.3333333\nlist2 -0.3333333  1.0000000\n\n\n\n\n\nAnswer:\n\npurrr functions consistently use . as prefix to avoid inadvertently matching arguments of the purrr function, instead of the function that you’re trying to call. Base functions use a variety of techniques including upper case (e.g. lapply(X, FUN, …)) or require anonymous functions (e.g. Map()).\n\nAll map functions are type stable: you can predict the type of the output using little information about the inputs. In contrast, the base functions sapply() and mapply() automatically simplify making the return value hard to predict.\n\nThe map functions all start with the data, followed by the function, then any additional constant argument. Most base apply functions also follow this pattern, but mapply() starts with the function, and Map() has no way to supply additional constant arguments.\n\npurrr functions provide all combinations of input and output variants, and include variants specifically for the common two argument case.\n\n\n\nAnswer:\nSide effect is a function that perform an action beyond simply returning a value.Here are some key points :\n1) Changing state:- Side-effect functions can modify global variables, change the contents of data frames, write to files, or alter the state of objects in the environment. For example, using assign() to create or modify a variable in a different environment is a side effect.\n2) Output Generation: Functions that produce visual output (like plots or graphs) or print messages to the console are also considered side-effect functions. For instance, print(), plot(), and cat() functions display output rather than returning a value for further computation. Walk() :- this is a side- effect function but return the original data. It is used to apply a function to each element of a list or vector without returning a result. It’s typically used for functions that produce side effects, such as printing or writing to files\nOther Side-Effect Functions in Base R In addition to purrr, many base R functions also have side effects, including:\nprint(): Outputs the value to the console. cat(): Concatenates and prints objects. plot(): Generates visual output. write.csv(): Writes data frames to a CSV file. assign(): Assigns a value to a variable in a specified environment. message(): Sends a message to the console, useful for debugging.\n\n\n\nAnswer:\nWe can name a variable sd within function without causing issues with the built in sd() function because of scope and masking rule.\n1. Function scope:- when we define a variable inside a function, it exists in that function’s local environment only.\n2. Masking:- If a variable name in a local environment matches a function name like sd the local variable will mask the function witin that environment. It means outside the function, the global sd() function remains unchanged and accessible.",
    "crumbs": [
      "Home",
      "Homework 6",
      "task1_conceptual"
    ]
  },
  {
    "objectID": "Homework06/pages/task1_conceptual.html#task-1-conceptual-questions",
    "href": "Homework06/pages/task1_conceptual.html#task-1-conceptual-questions",
    "title": "task1_conceptual",
    "section": "",
    "text": "Answer:\nlapply():- Applies a function to elements in a list or a vector and returns the results in a list.The syntax of lapply is lapply(x, FUN,…) where x is a vector, FUN: the function to be applied to each element of x. purrr function:– purrr::map()– it is more consistency and some helper functions are there, it offers more control over output types and integrates well with the tidyverse.\n\n\n\n\nlist1 &lt;- c(45,57,27,89,25,44)\nlist2 &lt;- c(34,23,567,45,67,26)\n\nmy_list &lt;- list(data.frame(list1, list2))\n\ncor_results &lt;- lapply(my_list, function(numeric_matrix) {\n  cor(numeric_matrix, method = \"kendall\")\n})\n\n# print the correlation results\ncor_results\n\n[[1]]\n           list1      list2\nlist1  1.0000000 -0.3333333\nlist2 -0.3333333  1.0000000\n\n\n\n\n\nAnswer:\n\npurrr functions consistently use . as prefix to avoid inadvertently matching arguments of the purrr function, instead of the function that you’re trying to call. Base functions use a variety of techniques including upper case (e.g. lapply(X, FUN, …)) or require anonymous functions (e.g. Map()).\n\nAll map functions are type stable: you can predict the type of the output using little information about the inputs. In contrast, the base functions sapply() and mapply() automatically simplify making the return value hard to predict.\n\nThe map functions all start with the data, followed by the function, then any additional constant argument. Most base apply functions also follow this pattern, but mapply() starts with the function, and Map() has no way to supply additional constant arguments.\n\npurrr functions provide all combinations of input and output variants, and include variants specifically for the common two argument case.\n\n\n\nAnswer:\nSide effect is a function that perform an action beyond simply returning a value.Here are some key points :\n1) Changing state:- Side-effect functions can modify global variables, change the contents of data frames, write to files, or alter the state of objects in the environment. For example, using assign() to create or modify a variable in a different environment is a side effect.\n2) Output Generation: Functions that produce visual output (like plots or graphs) or print messages to the console are also considered side-effect functions. For instance, print(), plot(), and cat() functions display output rather than returning a value for further computation. Walk() :- this is a side- effect function but return the original data. It is used to apply a function to each element of a list or vector without returning a result. It’s typically used for functions that produce side effects, such as printing or writing to files\nOther Side-Effect Functions in Base R In addition to purrr, many base R functions also have side effects, including:\nprint(): Outputs the value to the console. cat(): Concatenates and prints objects. plot(): Generates visual output. write.csv(): Writes data frames to a CSV file. assign(): Assigns a value to a variable in a specified environment. message(): Sends a message to the console, useful for debugging.\n\n\n\nAnswer:\nWe can name a variable sd within function without causing issues with the built in sd() function because of scope and masking rule.\n1. Function scope:- when we define a variable inside a function, it exists in that function’s local environment only.\n2. Masking:- If a variable name in a local environment matches a function name like sd the local variable will mask the function witin that environment. It means outside the function, the global sd() function remains unchanged and accessible.",
    "crumbs": [
      "Home",
      "Homework 6",
      "task1_conceptual"
    ]
  }
]