---
title: "Conceptual Questions"
author: "Saurabh Gupta"
format: html
editor: visual
---

# Task 1: Conceptual Questions

### 1. If your working directory is `myfolder/homework/`, what relative path would you specify to get the file located at `myfolder/MyData.csv`?

If your working directory is: myfolder/homework/

and the file is in: myfolder/MyData.csv

then we go up one directory (from homework/ back to myfolder/) and then specify the file name. ../MyData.csv

------------------------------------------------------------------------

### 2. What are the major benefits of using R projects?

R is really good for data analysis and machine learning since it has a ton of packages that make cleaning and organizing messy data much easier. The biggest advantage of using R projects is reproducibility. If we set up work in an RStudio project, then we can share your code and others can run it right away without messing around with file paths. It also helps keep things organized because each project has its own working directory, history, and files.

------------------------------------------------------------------------

### 3. What is git and what is github?

**Git** is a version control tool I use to track changes in my code. It keeps a full history so I can go back if I mess something up, and it lets me create branches to try new things without breaking the main project. It’s also great for working with other people since everyone can work on their own part and then merge it together.

**GitHub** is basically the online home for Git projects. I can upload my repos there, share them with others, and work as a team. It has extra features like pull requests for reviewing code, issues for tracking bugs, and even project boards to stay organized.

**Git features:** tracks changes, branching and merging, rollback, easy collaboration.\
**GitHub features:** online repo hosting, pull requests, CI/CD integration.

Overall, Git is the tool that does the version control, and GitHub is the platform that makes it simple to store, share, and collaborate on projects.

------------------------------------------------------------------------

### 4. What are the two main differences between a tibble and a data.frame?

1- A tibble is like an improved data.frame, and there are a few key differences.\
2- The big three are printing, subsetting, and recycling rules. Printing in tibbles is cleaner since it only shows the first 10 rows, while data.frames try to print everything.\
If I grab one column from a tibble, it stays a tibble, but with a data.frame it just turns into a vector.\
3- For recycling, if I add a new column in a tibble, I have to give the full column, but a data.frame will recycle the values.\
4- There are a few other smaller differences like reading with read.csv() gives a data.frame but read_csv() from tidyverse gives a tibble.\
5- Tibbles don’t allow partial column name matching (data.frames do)\
And tibbles keep variable types as it is while data.frames sometimes turn strings into factors.

------------------------------------------------------------------------

### 5. Rewrite the following nested function call using BaseR’s chaining operator

### 

as_tibble(iris) \|\> select(starts_with("Petal"), Species) \|\> filter(Petal.Length \< 1.55) \|\> arrange(Species)
